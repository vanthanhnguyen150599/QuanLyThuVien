/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author NGOC TRAN
 */

public class DOCGIA extends javax.swing.JFrame {

    /**
     * Creates new form DOCGIA
     */
    DefaultTableModel dtm;
    public DOCGIA() {
        initComponents();
        napDocGia();
        ImageIcon im = new ImageIcon("C:\\Users\\vanth\\Desktop\\icon java/members.png");
        setIconImage(im.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblChucnang = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnQLmenu = new javax.swing.JButton();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();
        lblThongtinDG = new javax.swing.JLabel();
        lblThongtin = new javax.swing.JLabel();
        lblMaDG = new javax.swing.JLabel();
        lblTen = new javax.swing.JLabel();
        nhapMaDG = new javax.swing.JTextField();
        nhapTen = new javax.swing.JTextField();
        lblNgaysinh = new javax.swing.JLabel();
        String ngay31[] = new String[32];
        ngay31[0]="dd";
        for (int i=1; i<32; i++)
        {
            ngay31[i]=String.valueOf(i);
        }
        boxNgay = new javax.swing.JComboBox<>();
        lblGioitinh = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblHo = new javax.swing.JLabel();
        String thang[] = new String[13];
        thang[0]="mm";
        for (int i=1; i<13; i++)
        {
            thang[i]= String.valueOf(i);
        }
        boxThang = new javax.swing.JComboBox<>();
        nhapHo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblSdt = new javax.swing.JLabel();
        nhapSdt = new javax.swing.JTextField();
        String nam[] = new String[71];
        nam[0] = "yyyy";
        for (int i=1; i<71; i++)
        {
            nam[i]=String.valueOf(i+1949);
        }
        boxNam = new javax.swing.JComboBox<>();
        lblEmail = new javax.swing.JLabel();
        nhapEmail = new javax.swing.JTextField();
        lblDiachi = new javax.swing.JLabel();
        nhapDiachi = new javax.swing.JTextField();
        lblDS = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DocGia = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ ĐỌC GIẢ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblChucnang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblChucnang.setText("Chức năng:");

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnQLmenu.setText("Quay lại menu");
        btnQLmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLmenuActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdNam);
        rdNam.setSelected(true);
        rdNam.setText("NAM");
        rdNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdNu);
        rdNu.setText("NỮ");

        lblThongtinDG.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblThongtinDG.setText("QUẢN LÝ ĐỘC GIẢ");

        lblThongtin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblThongtin.setText("Thông tin:");

        lblMaDG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMaDG.setText("Mã độc giả:");

        lblTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTen.setText("Tên:");

        nhapMaDG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nhapTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblNgaysinh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNgaysinh.setText("Ngày sinh:");

        for (int i=0; i<32; i++)
        {
            boxNgay.addItem(ngay31[i]);
        }
        boxNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNgayActionPerformed(evt);
            }
        });

        lblGioitinh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGioitinh.setText("Giới tính:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("/");

        lblHo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHo.setText("Họ:");

        for (int i=0; i<13; i++)
        {
            boxThang.addItem(thang[i]);
        }
        boxThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxThangActionPerformed(evt);
            }
        });

        nhapHo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("/");

        lblSdt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSdt.setText("Số điện thoại:");

        nhapSdt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        boxNam.addItem(nam[0]);
        for (int i=70; i>=1; i--)
        {
            boxNam.addItem(nam[i]);
        }
        boxNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxNamActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        nhapEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblDiachi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDiachi.setText("Địa chỉ:");

        nhapDiachi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblDS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDS.setText("Danh Sách:");

        jScrollPane1.setToolTipText("");
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable_DocGia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable_DocGia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã độc giả", "Họ", "Tên", "Giới tính", "Ngày sinh", "Địa chỉ", "Email", "Số điện thoại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_DocGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DocGiaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_DocGia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDiachi)
                            .addComponent(lblHo)
                            .addComponent(lblTen))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nhapMaDG)
                                            .addComponent(nhapHo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(75, 75, 75)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblGioitinh)
                                            .addComponent(lblEmail)
                                            .addComponent(lblNgaysinh)))
                                    .addComponent(lblThongtinDG))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdNam)
                                        .addGap(39, 39, 39)
                                        .addComponent(rdNu))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(boxNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nhapEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(79, 79, 79))
                            .addComponent(nhapDiachi)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDS)
                            .addComponent(lblThongtin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSdt)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nhapSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nhapTen, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblChucnang)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(btnQLmenu)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblThongtinDG, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblThongtin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaDG, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhapMaDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxNgay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(boxThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(boxNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhapEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(lblHo)
                    .addComponent(nhapHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGioitinh)
                    .addComponent(rdNam)
                    .addComponent(rdNu)
                    .addComponent(lblTen)
                    .addComponent(nhapTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSdt)
                    .addComponent(nhapSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nhapDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiachi))
                .addGap(18, 18, 18)
                .addComponent(lblChucnang)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu)
                    .addComponent(btnXoa)
                    .addComponent(btnQLmenu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean cothexoa(String MADG)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT MADG FROM PHIEUMUONSACH WHERE MADG = '" + MADG + "'");
            while (rs.next())
            {
                return true;
            }
        }
        catch (SQLException e)
        {
            
        }
        return false;
    }
    private boolean trungEmail(String Email,String MADG)
    {
         Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT EMAIL FROM DOCGIA WHERE EMAIL = '" + Email + "' AND MADG <> '" + MADG + "'" );
            while (rs.next())
            {
                return true;
            }
        }
        catch(SQLException e)
        {
            
        }
        return false;
    }
     private boolean trungSDT(String SDT, String MADG)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT SDT FROM DOCGIA WHERE SDT = " + Integer.valueOf(SDT) + "AND MADG <> '" + MADG + "'");
            while (rs.next())
            {
                return true;
            }
        }
        catch(SQLException e)
        {
            
        }
        return false;
    }
    public int DayofMonth(int mm, int yy)
    {
        if (mm==4 || mm==6 || mm==9 || mm==11 )
            return 30;
        if (mm==2)
        {
            if (yy%4==0)
                return 29;
            return 28;
        }
        return 31;
    }
    public void napDocGia()
    {
        dtm = (DefaultTableModel) jTable_DocGia.getModel();
        dtm.setNumRows(0);
        
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM DOCGIA");
//            ds_doc_gia a = new ds_doc_gia();
            while(rs.next())
            {
                Vector<Object> vt = new Vector();
                String MADG = rs.getString("MADG");
                String HO = rs.getString("HO");
                String TEN = rs.getString("TEN");
                String PHAI = rs.getString("PHAI");
                String DIACHI = rs.getString("DIACHI");
                String EMAIL = rs.getString("EMAIL");
                String NGAYSINH = String.valueOf(2020 - boxNam.getSelectedIndex()) + "-" + String.valueOf(boxThang.getSelectedIndex()) + "-" + String.valueOf(boxNgay.getSelectedIndex());
                Date ngaysinh = rs.getDate("NGAYSINH");
                int SDT = Integer.parseInt(rs.getString("SDT"));
//                a.themDocGia(MADG, HO, TEN, PHAI, DIACHI, EMAIL, NGAYSINH, SDT);
                vt.add(MADG);
                vt.add(HO);
                vt.add(TEN);
                vt.add(PHAI);
                vt.add(ngaysinh);
                vt.add(DIACHI);
                vt.add(EMAIL);
                vt.add(SDT);
                dtm.addRow(vt);
            }
        }
        catch(SQLException e)
        {
            System.out.println("Khong the nap doc gia");
        }
    }
    
    private void themDocGia(String MADG, String HO, String TEN, String PHAI, String DIACHI, String EMAIL, Date NGAYSINH, int SDT)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "insert into DOCGIA values(?,?,?,?,?,?,?,?)";
        try
        {
            PreparedStatement ps = connect.prepareStatement(st);
            ps.setString(1,MADG);
            ps.setString(2, HO);
            ps.setString(3, TEN);
            ps.setString(4, PHAI);
            ps.setString(5, DIACHI);
            ps.setString(7, EMAIL);
            ps.setDate(6, NGAYSINH);
            ps.setInt(8, SDT);
            ps.executeUpdate();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private int ktraDocgia(String MaDG)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "select * from DOCGIA where MADG='" + MaDG + "'";
        int tontai=0;
        try 
        {
            PreparedStatement ps = connect.prepareStatement(st);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                tontai=1;
            }
            rs.close();
            ps.close();
            connect.close();
        }
        catch(Exception e)
        {
            Logger.getLogger(DOCGIA.class.getName()).log(Level.SEVERE, null, e);
        }
        return tontai;
    }

    private void xoaDocgia(String MaDG)
    {
        if (cothexoa(MaDG)) {JOptionPane.showMessageDialog(rootPane, "Không thể xóa đọc giả vì đã mượn trả sách"); return;}
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "Delete from DOCGIA where MADG='"+ MaDG +"'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(st);
            //ps.setString(1, MaDG);
            ps.executeUpdate();
        }
        catch (Exception e)
        {
            Logger.getLogger(DOCGIA.class.getName()).log(Level.SEVERE, null, e);
        }
        JOptionPane.showMessageDialog(this, "Xoá độc giả thành công");
        this.napDocGia();
    }
    
    private void suaDocgia(String MADG, String HO, String TEN, String PHAI, String DIACHI, String EMAIL, Date NGAYSINH, int SDT)
    {
       
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "update DOCGIA SET MADG = ?, HO = ?, TEN = ?, PHAI = ?, DIACHI = ?,NGAYSINH = ?, EMAIL = ?, SDT = ? where MADG = '" + MADG + "'";
        try
        {
            PreparedStatement ps = connect.prepareStatement(st);
            ps.setString(1,MADG);
            ps.setString(2, HO);
            ps.setString(3, TEN);
            ps.setString(4, PHAI);
            ps.setString(5, DIACHI);
            ps.setDate(6, NGAYSINH);
            ps.setString(7, EMAIL);
            ps.setInt(8, SDT);
            ps.executeUpdate();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public boolean kiemtraEmail(String email)
    {
        String Email_pattern = "^[a-zA-Z][a-z0-9]{0,}[@]{1}[a-z]{1,}\\.{1}[a-z]{1,}";
        return email.matches(Email_pattern);

    }
    
    public boolean kiemtraSDT(String SDT)
    {
        String SDT_pattern = "^[0][0-9]{9}";
        return SDT.matches(SDT_pattern);
    }
    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        String MADG = nhapMaDG.getText();
        String HO = nhapHo.getText();
        String TEN = nhapTen.getText();
        String SDT = nhapSdt.getText();
        String GIOITINH = rdNam.isSelected() == true ? "NAM" : "NỮ";
        String EMAIL = nhapEmail.getText();
        String DIACHI = nhapDiachi.getText();
        String NGAYSINH = String.valueOf(2020 - boxNam.getSelectedIndex()) + "-" + String.valueOf(boxThang.getSelectedIndex()) + "-" + String.valueOf(boxNgay.getSelectedIndex());
        Date ngaysinh= Date.valueOf("1990-05-30");

        //String MADG = nhapMaDG.getText();

        int ktMADG=0, ktHO=0, ktTEN=0, ktNS=0, ktEMAIL=0, ktSDT=0, ktDIACHI=0;
        if (MADG.equals("")){
            ktMADG=1;
            JOptionPane.showMessageDialog(this, "Ma doc gia khong duoc de trong");
        }
        else if (HO.equals("")){
            ktHO=1;
            JOptionPane.showMessageDialog(this, "Ho khong duoc de trong");
        }
        else if (TEN.equals("")){
            ktTEN=1;
            JOptionPane.showMessageDialog(this, "Ten khong duoc de trong");
        }
        else if (EMAIL.equals("") || kiemtraEmail(EMAIL)!=true){
            ktEMAIL=1;
            JOptionPane.showMessageDialog(this, "Email khong duoc de trong.Nhap dung dinh dang: 'xxx@xxx.xxx' ");
        }
        else if (DIACHI.equals("")){
            ktDIACHI=1;
            JOptionPane.showMessageDialog(this, "Dia chi khong duoc de trong");
        }
        else if (boxNgay.getSelectedIndex()==0 || boxThang.getSelectedIndex()==0 || boxNam.getSelectedIndex()==0 ){
            ktNS=1;
            //NGAYSINH = String.valueOf(2020 - boxNam.getSelectedIndex()) + "-" + String.valueOf(boxThang.getSelectedIndex()) + "-" + String.valueOf(boxNgay.getSelectedIndex());
            // System.out.println(NGAYSINH);

            JOptionPane.showMessageDialog(this, "Phai chon ngay sinh");
        }
        else if (nhapSdt.getText().equals("") || kiemtraSDT(SDT)!=true){
            ktSDT=1;
            JOptionPane.showMessageDialog(this, "SDT khong duoc de trong.Nhap dung dinh dang: '0xxx(10 so)'");
        }
        else if (ktMADG!=1 && ktHO!=1 && ktTEN!=1 && ktEMAIL!=1 && ktDIACHI!=1 &&ktNS!=1 && ktSDT!=1)
        {
             if (trungEmail(EMAIL,nhapMaDG.getText()))
             {
                 JOptionPane.showMessageDialog(rootPane, "Email đã tồn tại");
             }
             else if (trungSDT(SDT,nhapMaDG.getText()))
             {
                 JOptionPane.showMessageDialog(rootPane, "Số điện thoại đã tồn tại");
             }
             else
             {
                 int check = ktraDocgia(MADG);
                    if (check ==1 )
                    {
                        int ret = JOptionPane.showConfirmDialog(this,"Mã độc giả này đã tồn tại. Bạn có chắc chắn muốn sửa", "Xác nhận", 0);
                        if (ret==JOptionPane.CANCEL_OPTION){
                            return;
                        }
                        else if (ret==JOptionPane.OK_OPTION)
                        {
                            ngaysinh = Date.valueOf(NGAYSINH);
                            suaDocgia(MADG, HO, TEN, GIOITINH, DIACHI, EMAIL, ngaysinh,Integer.parseInt(SDT));
                            JOptionPane.showMessageDialog(this, "Sửa độc giả thành công");
                            this.napDocGia();
                        }
                    }
                    else
                    {
                        int ret = JOptionPane.showConfirmDialog(this,"Độc giả này chưa có, bạn hãy thêm thông tin độc giả vào hệ thống","Xác nhận",0);
                        if (ret==JOptionPane.CANCEL_OPTION){
                            return;
                        }
                        else if (ret==JOptionPane.OK_OPTION)
                        {
                            ngaysinh = Date.valueOf(NGAYSINH);
                            themDocGia(MADG,HO,TEN,GIOITINH,DIACHI,EMAIL,ngaysinh,Integer.parseInt(SDT));
                            napDocGia();
                            JOptionPane.showMessageDialog(this,"Thêm độc giả thành công");
                        }
                    }
             }
        }

        //        nhapMaDG.setText("");
        //        nhapHo.setText("");
        //        nhapTen.setText("");
        //        nhapSdt.setText("");
        //        nhapEmail.setText("");
        //        nhapDiachi.setText("");
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        String MaDG = nhapMaDG.getText();
        int kt=0;
        if (MaDG.equals(""))
        {
            kt=1;
            JOptionPane.showMessageDialog(this, "Hãy nhập mã độc giả bạn muốn xoá");
        }
        else if (kt != 1)
        {
            int check = ktraDocgia(MaDG);
            if (check == 1)
            {
                int ret = JOptionPane.showConfirmDialog(this,"Bạn có chắc chắn muốn xoá", "Xác nhận", 0);
                if (ret == JOptionPane.CANCEL_OPTION)
                {
                    return;
                }
                else if (ret == JOptionPane.OK_OPTION)
                {
                    xoaDocgia(MaDG);
                    
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Độc giả này chưa có, bạn hãy thêm thông tin độc giả vào hệ thống");
            }
            nhapMaDG.setText("");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnQLmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLmenuActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        removeAll();
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnQLmenuActionPerformed

    private void rdNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdNamActionPerformed

    private void boxNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNgayActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_boxNgayActionPerformed

    private void boxThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxThangActionPerformed
         // TODO add your handling code here:
        int mm ;
        int dd;
        int yy ;
        int soitem=boxNgay.getItemCount();
        dd=boxNgay.getSelectedIndex();
        if (boxNam.getSelectedIndex()==0) yy=0;
        else yy=2020-boxNam.getSelectedIndex();

        if (boxThang.getSelectedIndex()==0) mm=0;
        else mm=boxThang.getSelectedIndex();

        if (DayofMonth(mm,yy) != soitem -1 )
        {
            if (DayofMonth(mm,yy) > soitem-1)
            {
                for (int i=1; i<=(DayofMonth(mm,yy)-soitem)+1; i++)
                {
                    boxNgay.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
                if (dd > DayofMonth(mm,yy))
                {
                    boxNgay.setSelectedIndex(DayofMonth(mm,yy));
                }
                for (int i=1; i<= (soitem-DayofMonth(mm,yy)-1); i++)
                {
                    boxNgay.removeItemAt(DayofMonth(mm,yy)+1);
                }
            }
        }
    }//GEN-LAST:event_boxThangActionPerformed

    private void boxNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxNamActionPerformed
        // TODO add your handling code here:
        int mm ;
        int dd;
        int yy ;
        int soitem=boxNgay.getItemCount();
        dd=boxNgay.getSelectedIndex();
        if (boxNam.getSelectedIndex()==0) yy=0;
        else yy=2019-boxNam.getSelectedIndex()+1;

        if (boxThang.getSelectedIndex()==0) mm=0;
        else mm=boxThang.getSelectedIndex();

        if (DayofMonth(mm,yy) != soitem -1 )
        {
            if (DayofMonth(mm,yy) > soitem-1)
            {
                for (int i=1; i<=(DayofMonth(mm,yy)-soitem)+1; i++)
                {
                    boxNgay.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
                if (dd > DayofMonth(mm,yy))
                {
                    boxNgay.setSelectedIndex(DayofMonth(mm,yy));
                }
                for (int i=1; i<= (soitem-DayofMonth(mm,yy)-1); i++)
                {
                    boxNgay.removeItemAt(DayofMonth(mm, yy)+1);
                }
            }
        }
    }//GEN-LAST:event_boxNamActionPerformed

    private void jTable_DocGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DocGiaMouseClicked
        // TODO add your handling code here:
        int i = jTable_DocGia.getSelectedRow();
        dtm = (DefaultTableModel) jTable_DocGia.getModel();

        String ns[] = dtm.getValueAt(i, 4).toString().split("-");

        nhapMaDG.setText(dtm.getValueAt(i, 0).toString());
        nhapHo.setText(dtm.getValueAt(i, 1).toString());
        nhapTen.setText(dtm.getValueAt(i, 2).toString());
        if (dtm.getValueAt(i, 3).toString().equals("NAM"))
        {
            rdNam.setSelected(true);
        }
        else{
            rdNu.setSelected(true);
        }
        boxNgay.setSelectedIndex(Integer.parseInt(ns[2]));
        boxThang.setSelectedIndex(Integer.parseInt(ns[1]));
        boxNam.setSelectedIndex(2020-Integer.parseInt(ns[0]));
        nhapDiachi.setText(dtm.getValueAt(i, 5).toString());
        nhapEmail.setText(dtm.getValueAt(i, 6).toString());
        nhapSdt.setText("0" + dtm.getValueAt(i, 7).toString());
    }//GEN-LAST:event_jTable_DocGiaMouseClicked

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát?");
        if(check == 0) System.exit(0);
        else setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DOCGIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DOCGIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DOCGIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DOCGIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DOCGIA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxNam;
    private javax.swing.JComboBox<String> boxNgay;
    private javax.swing.JComboBox<String> boxThang;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnQLmenu;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_DocGia;
    private javax.swing.JLabel lblChucnang;
    private javax.swing.JLabel lblDS;
    private javax.swing.JLabel lblDiachi;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGioitinh;
    private javax.swing.JLabel lblHo;
    private javax.swing.JLabel lblMaDG;
    private javax.swing.JLabel lblNgaysinh;
    private javax.swing.JLabel lblSdt;
    private javax.swing.JLabel lblTen;
    private javax.swing.JLabel lblThongtin;
    private javax.swing.JLabel lblThongtinDG;
    private javax.swing.JTextField nhapDiachi;
    private javax.swing.JTextField nhapEmail;
    private javax.swing.JTextField nhapHo;
    private javax.swing.JTextField nhapMaDG;
    private javax.swing.JTextField nhapSdt;
    private javax.swing.JTextField nhapTen;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    // End of variables declaration//GEN-END:variables
}

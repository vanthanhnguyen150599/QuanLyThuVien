/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;

/**
 *
 * @author NGOC TRAN
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class SACH extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    DefaultTableModel dtm;
    public SACH() {
        initComponents();
        napSach();
        ImageIcon im = new ImageIcon("C:\\Users\\vanth\\Desktop\\icon java/sach.jpg");
        setIconImage(im.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnQLmenu = new javax.swing.JButton();
        lblTG = new javax.swing.JLabel();
        lblDS = new javax.swing.JLabel();
        lblNAMXB = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Sach = new javax.swing.JTable();
        nhapNAMXB = new javax.swing.JTextField();
        nhapTG = new javax.swing.JTextField();
        cbbox_tensach = new javax.swing.JComboBox<>();
        lblNgan = new javax.swing.JLabel();
        cbbox_Ngan = new javax.swing.JComboBox<>();
        lblKe = new javax.swing.JLabel();
        cbbox_Ke = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblMasach = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nhapMasach = new javax.swing.JTextField();
        lblTensach = new javax.swing.JLabel();
        lblChucnang = new javax.swing.JLabel();
        btnLuu = new javax.swing.JButton();
        lblNXB = new javax.swing.JLabel();
        btnXoa = new javax.swing.JButton();
        nhapNXB = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ SÁCH");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnQLmenu.setText("Quay lại menu");
        btnQLmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLmenuActionPerformed(evt);
            }
        });

        lblTG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTG.setText("Tác giả:");

        lblDS.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDS.setText("Danh sách:");

        lblNAMXB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNAMXB.setText("Năm xuất bản:");

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable_Sach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Ngăn", "Kệ", "Nhà xuất bản", "Năm xuất bản", "Tác giả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_Sach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_SachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_Sach);

        nhapNAMXB.setEditable(false);
        nhapNAMXB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nhapTG.setEditable(false);
        nhapTG.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Connection connect = ketnoicsdl.layKetNoi();
        String st = "select TENSACH from DAUSACH";
        try
        {
            PreparedStatement ps = connect.prepareStatement(st);
            ResultSet rs = ps.executeQuery();
            cbbox_tensach.addItem("TÊN SÁCH");
            while(rs.next())
            {
                cbbox_tensach.addItem(rs.getString("TENSACH"));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        cbbox_tensach.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbox_tensach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbox_tensachMouseClicked(evt);
            }
        });
        cbbox_tensach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbox_tensachActionPerformed(evt);
            }
        });

        lblNgan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNgan.setText("Ngăn:");

        cbbox_Ngan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbox_Ngan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ngăn", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        cbbox_Ngan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbox_NganActionPerformed(evt);
            }
        });

        lblKe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblKe.setText("Kệ:");

        cbbox_Ke.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbox_Ke.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kệ", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ SÁCH");

        lblMasach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMasach.setText("Mã sách:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Thông tin:");

        nhapMasach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblTensach.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTensach.setText("Tên sách:");

        lblChucnang.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblChucnang.setText("Chức năng:");

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        lblNXB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNXB.setText("Nhà xuất bản:");

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        nhapNXB.setEditable(false);
        nhapNXB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTG)))
                .addContainerGap(273, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblChucnang)
                        .addGap(562, 573, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(119, 119, 119)
                                .addComponent(btnQLmenu)
                                .addGap(40, 40, 40))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMasach, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTensach)
                                    .addComponent(lblNXB))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nhapTG, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbbox_tensach, 0, 202, Short.MAX_VALUE)
                                            .addComponent(nhapNXB)
                                            .addComponent(nhapMasach))
                                        .addGap(78, 78, 78)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblNgan)
                                            .addComponent(lblKe)
                                            .addComponent(lblNAMXB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbbox_Ngan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbbox_Ke, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(nhapNAMXB, javax.swing.GroupLayout.Alignment.TRAILING))))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDS)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMasach, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nhapMasach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgan)
                    .addComponent(cbbox_Ngan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTensach)
                        .addComponent(cbbox_tensach))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblKe)
                        .addComponent(cbbox_Ke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNXB)
                    .addComponent(nhapNXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNAMXB)
                    .addComponent(nhapNAMXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTG)
                    .addComponent(nhapTG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(lblChucnang)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu)
                    .addComponent(btnXoa)
                    .addComponent(btnQLmenu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDS)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    boolean cothexoa(String MS)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT MS FROM CTPHIEUMUON WHERE MS = " + MS);
            while (rs.next())
            {
                return false;
            }
        }
        catch (SQLException e)
        {
            
        }
        return true;
    }
    public void napSach()
    {
        DefaultTableModel dtm = (DefaultTableModel) jTable_Sach.getModel();
        dtm.setNumRows(0);
        
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC SP_SACH");
            //ds_sach a = new ds_sach();
            while (rs.next())
            {
                Vector<Object> vt = new Vector();
                String MS = rs.getString("MS");
                String TENSACH = rs.getString("TENSACH");
                String NGAN =rs.getString("NGAN");
                String KE = rs.getString("KE");
                String TENNXB = rs.getString("TEN");
                String NAMXB = rs.getString("NAMXB");
                String TENTG = rs.getString("TENTG");
            
                vt.add(MS);
                vt.add(TENSACH);
                vt.add(NGAN);
                vt.add(KE);
                vt.add(TENNXB);
                vt.add(NAMXB);
                vt.add(TENTG);
                dtm.addRow(vt);
            }
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
    }
    
    private int kiemtraSach(int maSach) {
        Connection ketNoi = ketnoicsdl.layKetNoi();
        int tonTai = 0;
        String sql = "select * from SACH where MS =" + maSach ;
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                tonTai = 1;
            }
            rs.close();
            ps.close();
            ketNoi.close();
        } catch (SQLException ex) {
            Logger.getLogger(SACH.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        return tonTai;
    }
    
    private void themSach(String TENSACH, int MS, int NGAN, int KE) {
        Connection connect = ketnoicsdl.layKetNoi();
        String ISBN="";
        String st1= "select ISBN from DAUSACH where TENSACH=N'"+TENSACH+"'";
        try {
            PreparedStatement ps1= connect.prepareStatement(st1);
            ResultSet rs = ps1.executeQuery();
            while (rs.next())
            {
                ISBN=rs.getString("ISBN");
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        String st = "insert into SACH values (?,?,?,?,?,?)";
        try {
            PreparedStatement ps = connect.prepareStatement(st);
            ps.setString(1, ISBN);
            ps.setInt(2, MS);
            ps.setInt(3, NGAN);
            ps.setInt(4, KE);
            ps.setInt(5, 2);
            ps.setInt(6, 1);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(SACH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void suaSach(String TENSACH, int MS, int NGAN, int KE)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        String ISBN="";
        String st= "select ISBN from DAUSACH where TENSACH=N'"+TENSACH+"'";
        try {
            PreparedStatement ps1= connect.prepareStatement(st);
            ResultSet rs = ps1.executeQuery();
            while (rs.next())
            {
                ISBN=rs.getString("ISBN");
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        
        String st1="update SACH set ISBN=?, NGAN=?, KE=? where MS= "+MS;
        try{
            PreparedStatement ps = connect.prepareStatement(st1);
            ps.setString(1,ISBN);
            ps.setInt(2, NGAN);
            ps.setInt(3, KE);
            ps.executeUpdate();
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }
    }
    
    private void xoaSach(int MS)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "delete from SACH where MS='"+MS+"'";
        try 
        {
            PreparedStatement ps = connect.prepareStatement(st);
            ps.executeUpdate();
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }
    }
    private void btnQLmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLmenuActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        removeAll();;
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnQLmenuActionPerformed

    private void jTable_SachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_SachMouseClicked
        // TODO add your handling code here:
        int i = jTable_Sach.getSelectedRow();
        //DefaultTableModel dtm = (DefaultTableModel) jTable_Sach.getModel();
        dtm = (DefaultTableModel) jTable_Sach.getModel();

        nhapMasach.setText(dtm.getValueAt(i, 0).toString());
        cbbox_tensach.setSelectedItem(dtm.getValueAt(i,1).toString());
        cbbox_Ngan.setSelectedIndex(Integer.parseInt(dtm.getValueAt(i,2).toString()));
        cbbox_Ke.setSelectedIndex(Integer.parseInt(dtm.getValueAt(i, 3).toString()));
    }//GEN-LAST:event_jTable_SachMouseClicked

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:;
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void cbbox_tensachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbox_tensachMouseClicked
        // TODO add your handling code here:
        //        String TENSACH = cbbox_tensach.getSelectedItem().toString();
        //
        //        Connection connect = KetNoiMSSQL.layKetNoi();
        //        String st = "EXEC SP_TENSACH @N'"+TENSACH+"'";
        //        try {
            //            PreparedStatement ps = connect.prepareStatement(st);
            //            ResultSet rs = ps.executeQuery();
            //            while (rs.next())
            //            {
                //                nhapNXB.setText(rs.getString("TEN"));
                //                nhapNAMXB.setText(rs.getString("NAMXB"));
                //                nhapTG.setText(rs.getString("TENTG"));
                //            }
            //        }
        //        catch(SQLException e)
        //        {
            //            e.printStackTrace();
            //        }
    }//GEN-LAST:event_cbbox_tensachMouseClicked

    private void cbbox_tensachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbox_tensachActionPerformed
        // TODO add your handling code here:
        
        String TENSACH = cbbox_tensach.getSelectedItem().toString();
        //System.out.println(TENSACH);
        System.out.println(TENSACH);
        Connection connect = ketnoicsdl.layKetNoi();
        String st = "EXEC SP_TENSACH1 @TENSACH = N'"+TENSACH+"'";
        try {
            PreparedStatement ps = connect.prepareStatement(st);
            ResultSet rs = ps.executeQuery();
            while (rs.next())
            {
                nhapNXB.setText(rs.getString("TEN"));
                nhapNAMXB.setText(rs.getString("NAMXB"));
                nhapTG.setText(rs.getString("TENTG"));
                return;
            }
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }
        nhapNXB.setText("");
        nhapNAMXB.setText("");
        nhapTG.setText("");
    }//GEN-LAST:event_cbbox_tensachActionPerformed

    private void cbbox_NganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbox_NganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbox_NganActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        String MASACH = nhapMasach.getText();
        String TENSACH = cbbox_tensach.getSelectedItem().toString();
        String NGAN=String.valueOf(cbbox_Ngan.getSelectedIndex());
        String KE = String.valueOf(cbbox_Ke.getSelectedIndex());

        if (MASACH.equals("")){
            JOptionPane.showMessageDialog(this, "Mã sách không được để trống");
        }
        else if (TENSACH.equals("TÊN SÁCH")){
            JOptionPane.showMessageDialog(this,"Phải chọn tên sách");
        }
        else
        {
            if (cbbox_Ngan.getSelectedIndex() == 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn ngăn");
            }
            else if (cbbox_Ke.getSelectedIndex() == 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng chọn kệ");
            }
            else
            {
                int check=kiemtraSach(Integer.parseInt(MASACH));
                if (check==1)
                {
                    int ret=JOptionPane.showConfirmDialog(this, "Mã sách này đã tồn tại. Bạn có muốn sửa không","Xác nhận",0);
                    if (ret==JOptionPane.CANCEL_OPTION)
                    {
                        return;
                    }
                    else if (ret==JOptionPane.OK_OPTION)
                    {
                        suaSach(TENSACH,Integer.parseInt(MASACH),Integer.parseInt(NGAN),Integer.parseInt(KE));
                        JOptionPane.showMessageDialog(this, "Sửa thành công");
                        this.napSach();
                    }
                }
                else
                {
                    int ret=JOptionPane.showConfirmDialog(this, "Mã sách này chưa có. Bạn có muốn thêm vào hệ thống","Xác nhận",0);
                    if (ret==JOptionPane.CANCEL_OPTION){
                        return;
                    }
                    else if (ret==JOptionPane.OK_OPTION)
                    {
                        themSach(TENSACH,Integer.parseInt(MASACH),Integer.parseInt(NGAN),Integer.parseInt(KE));
                        JOptionPane.showMessageDialog(this, "Thêm thành công");
                        this.napSach();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        String MASACH = nhapMasach.getText();
        if (MASACH.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Hãy nhập mã sách bạn muốn xoá");
        }
        else
        {
            int check = kiemtraSach(Integer.parseInt(MASACH));
            if (check == 1 && cothexoa(MASACH))
            {
                int ret=JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xoá","Xác nhận",0);
                if (ret==JOptionPane.CANCEL_OPTION)
                {
                    return;
                }
                else if (ret==JOptionPane.OK_OPTION)
                {
                    xoaSach(Integer.parseInt(MASACH));
                    JOptionPane.showMessageDialog(this, "Xoá sách thành công");
                    this.napSach();
                }
            }
            else {
                if(!cothexoa(MASACH))
                {
                    JOptionPane.showMessageDialog(rootPane, "Không thể xóa sách này do đang có quan hệ mượn trả");
                    return;
                }
                JOptionPane.showMessageDialog(this, "Mã sách này chưa có. Bạn hãy thêm vào hệ thống");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát?");
        if(check == 0) System.exit(0);
        else setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SACH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnQLmenu;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbox_Ke;
    private javax.swing.JComboBox<String> cbbox_Ngan;
    private javax.swing.JComboBox<String> cbbox_tensach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Sach;
    private javax.swing.JLabel lblChucnang;
    private javax.swing.JLabel lblDS;
    private javax.swing.JLabel lblKe;
    private javax.swing.JLabel lblMasach;
    private javax.swing.JLabel lblNAMXB;
    private javax.swing.JLabel lblNXB;
    private javax.swing.JLabel lblNgan;
    private javax.swing.JLabel lblTG;
    private javax.swing.JLabel lblTensach;
    private javax.swing.JTextField nhapMasach;
    private javax.swing.JTextField nhapNAMXB;
    private javax.swing.JTextField nhapNXB;
    private javax.swing.JTextField nhapTG;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;

/**
 *
 * @author vanth
 */
import java.awt.Color;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
public class TRASACH extends javax.swing.JFrame {

    /**
     * Creates new form TRASACH
     */
    DefaultTableModel dtm;
    int currentDG = -1;
    String ngay;
    String thang;
    String nam;
    public boolean isTrueDay(int dd1, int mm1, int yy1, int dd2, int mm2, int yy2) // kiểm tra ngày thứ 2 có lớn hơn bằng ngày thứ nhất không
    {
        if (yy2 > yy1) return true;
        if (yy2 < yy1) return false;
        if (mm2 > mm1) return true;
        if (mm2 < mm1) return false;
        if (dd2 > dd1) return true;
        if (dd2 == dd1) return true;
        return false;
    }
     public int DayofMounth(int mm,int yy)
    {
        if (mm == 4 || mm == 6 || mm == 9 || mm == 11 ) return 30;
        if (mm == 2)
        {
            if (yy%4 == 0) return 29;
            return 28;
        }
        return 31;
    }
    public TRASACH() {
        getCurrentDate();
        initComponents();
        loadThongTinMuonDG();
        ImageIcon im = new ImageIcon("C:\\Users\\vanth\\Desktop\\icon java/images.jfif");
        this.setIconImage(im.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton_XACNHAN = new javax.swing.JButton();
        jButton_BACK = new javax.swing.JButton();
        jTextField_NGAYMUON_NGAY = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_NGAYMUON_THANG = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField_NGAYMUON_NAM = new javax.swing.JTextField();
        BACKGROUND = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_MUON = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_MATT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        int j = 0;
        jComboBox_MADG = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_DOCGIA_TEN = new javax.swing.JTextField();
        jComboBox_MS = new javax.swing.JComboBox<>();
        jTextField_THUTHU_TEN = new javax.swing.JTextField();
        jTextField_TENSACH1 = new javax.swing.JTextField();
        String nam[] = new String[72];
        nam[0] = "yyyy";
        for (int i = 1; i <= 71; i++)
        {
            nam[i] = String.valueOf(i+1949);
        }
        jComboBox_NGAYTRA_NAM = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        String thang[] = new String[13];
        thang[0] = "mm";
        for (int i = 1; i < 13; i++)
        {
            thang[i] = String.valueOf(i);
        }
        jComboBox_NGAYTRA_THANG = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        String ngay31[] = new String[32];
        ngay31[0] = "dd";
        for (int i = 1; i < 32; i++)
        {
            ngay31[i] = String.valueOf(i);
        }
        jComboBox_NGAYTRA_NGAY = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ THƯ VIỆN - TRẢ SÁCH");
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(679, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PHIẾU TRẢ SÁCH");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(221, 10, 199, 22);

        jButton_XACNHAN.setText("XÁC NHẬN");
        jButton_XACNHAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XACNHANActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_XACNHAN);
        jButton_XACNHAN.setBounds(127, 356, 100, 30);

        jButton_BACK.setText("QUAY LẠI");
        jButton_BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BACKActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_BACK);
        jButton_BACK.setBounds(433, 356, 100, 30);

        if (jComboBox_MS.getItemCount() == 0) jTextField_NGAYMUON_NGAY.setText("dd");
        jTextField_NGAYMUON_NGAY.setEditable(false);
        getContentPane().add(jTextField_NGAYMUON_NGAY);
        jTextField_NGAYMUON_NGAY.setBounds(120, 279, 38, 30);

        jLabel11.setText("/");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(160, 290, 5, 16);

        if (jComboBox_MS.getItemCount() == 0) jTextField_NGAYMUON_THANG.setText("mm");
        jTextField_NGAYMUON_THANG.setEditable(false);
        getContentPane().add(jTextField_NGAYMUON_THANG);
        jTextField_NGAYMUON_THANG.setBounds(170, 279, 38, 30);

        jLabel13.setText("/");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(210, 290, 5, 16);

        if (jComboBox_MS.getItemCount() == 0) jTextField_NGAYMUON_NAM.setText("yyyy");
        jTextField_NGAYMUON_NAM.setEditable(false);
        getContentPane().add(jTextField_NGAYMUON_NAM);
        jTextField_NGAYMUON_NAM.setBounds(220, 279, 55, 30);

        BACKGROUND.setForeground(new java.awt.Color(255, 255, 255));
        BACKGROUND.setMinimumSize(new java.awt.Dimension(650, 790));
        BACKGROUND.setPreferredSize(new java.awt.Dimension(679, 720));

        jTable_MUON.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã đọc giả", "Họ và tên", "Mã sách", "Tên sách", "Ngày mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_MUON.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_MUONMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_MUON);

        jLabel15.setText("     ");
        jLabel15.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("ĐỌC GIẢ ĐANG MƯỢN");

        jLabel4.setText("NGÀY TRẢ:");

        jLabel9.setText("HỌ VÀ TÊN:");

        jLabel7.setText("MÃ THỦ THƯ:");

        jTextField_MATT.setText(login.MATT);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_THONGTINTHUTHU @MATT = '" + login.MATT + "'");
            while (rs.next())
            {
                jTextField_THUTHU_TEN.setText(rs.getString("HO") + " " + rs.getString("TEN"));
            }
        }
        catch(SQLException e)
        {

        }
        jTextField_MATT.setEditable(false);
        jTextField_MATT.setPreferredSize(new java.awt.Dimension(29, 21));
        jTextField_MATT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MATTActionPerformed(evt);
            }
        });

        jLabel3.setText("MÃ SÁCH:");

        jLabel8.setText("HỌ VÀ TÊN:");

        jLabel2.setText("MÃ ĐỌC GIẢ:");

        connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery(" EXEC USP_DGDANGMUON");
            while (rs.next())
            {
                String MADG = rs.getString("MADG");
                jComboBox_MADG.addItem(MADG);
            }
        }
        catch (SQLException e)
        {

        }
        if (jComboBox_MADG.getItemCount() != 0){
            currentDG = 0;
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("DECLARE @MADG varchar(10) SET @MADG = '" + jComboBox_MADG.getItemAt(0) + "' EXEC USP_DANGMUON @MADG");
                while (rs.next())
                {
                    jComboBox_MS.addItem(rs.getString("MS"));
                    if (j == 0)
                    {
                        jTextField_TENSACH1.setText(rs.getString("TENSACH"));
                        String NAM = rs.getString("NAM");
                        String THANG = rs.getString("THANG");
                        String NGAY = rs.getString("NGAY");
                        jTextField_NGAYMUON_NGAY.setText(NGAY);
                        jTextField_NGAYMUON_THANG.setText(THANG);
                        jTextField_NGAYMUON_NAM.setText(NAM);
                        // System.out.println(NGAY + "/" + THANG + "/" + NAM);
                    }
                    j++;
                }
            }
            catch(SQLException ex)
            {

            }
        }
        jComboBox_MADG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_MADGMouseClicked(evt);
            }
        });
        jComboBox_MADG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MADGActionPerformed(evt);
            }
        });

        jLabel12.setText("TÊN SÁCH:");

        jLabel10.setText("NGÀY MƯỢN:");

        if (jComboBox_MADG.getItemCount() != 0)
        {
            String Ho = new String();
            String Ten = new String();
            connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("EXEC USP_THONGTINDOCGIA @MADG = '" + jComboBox_MADG.getItemAt(0) + "'");
                while (rs.next())
                {
                    Ho = rs.getString("HO");
                    Ten = rs.getString("TEN");
                }
            }
            catch(SQLException e)
            {

            }
            jTextField_DOCGIA_TEN.setText(Ho + " " + Ten);
            jTextField_DOCGIA_TEN.setEditable(false);
        }
        jTextField_DOCGIA_TEN.setPreferredSize(new java.awt.Dimension(29, 21));

        jComboBox_MS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MSActionPerformed(evt);
            }
        });

        jTextField_THUTHU_TEN.setEditable(false);
        jTextField_THUTHU_TEN.setPreferredSize(new java.awt.Dimension(29, 21));

        jTextField_TENSACH1.setEditable(false);

        jComboBox_NGAYTRA_NAM.addItem(nam[0]);
        for (int i = 71; i >= 1; i--)
        {
            jComboBox_NGAYTRA_NAM.addItem(nam[i]);
        }
        jComboBox_NGAYTRA_NAM.setSelectedIndex(2021 - Integer.valueOf(this.nam));
        jComboBox_NGAYTRA_NAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYTRA_NAMActionPerformed(evt);
            }
        });

        jLabel6.setText("/");

        for (int i = 0 ; i < 13; i++)
        {
            jComboBox_NGAYTRA_THANG.addItem(thang[i]);
        }
        jComboBox_NGAYTRA_THANG.setSelectedIndex(Integer.valueOf(this.thang));
        jComboBox_NGAYTRA_THANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYTRA_THANGActionPerformed(evt);
            }
        });

        jLabel5.setText("/");

        for (int i = 0; i < 32; i++)
        {
            jComboBox_NGAYTRA_NGAY.addItem(ngay31[i]);
        }
        jComboBox_NGAYTRA_NGAY.setSelectedIndex(Integer.valueOf(this.ngay));
        jComboBox_NGAYTRA_NGAY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYTRA_NGAYActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BACKGROUNDLayout = new javax.swing.GroupLayout(BACKGROUND);
        BACKGROUND.setLayout(BACKGROUNDLayout);
        BACKGROUNDLayout.setHorizontalGroup(
            BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                .addGap(694, 694, 694)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BACKGROUNDLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox_MADG, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField_MATT, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(BACKGROUNDLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(52, 52, 52)
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BACKGROUNDLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_TENSACH1))
                    .addGroup(BACKGROUNDLayout.createSequentialGroup()
                        .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_THUTHU_TEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField_DOCGIA_TEN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(BACKGROUNDLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_NGAYTRA_NGAY, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_NGAYTRA_THANG, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_NGAYTRA_NAM, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(BACKGROUNDLayout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        BACKGROUNDLayout.setVerticalGroup(
            BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BACKGROUNDLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_MADG, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_DOCGIA_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BACKGROUNDLayout.createSequentialGroup()
                        .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField_MATT, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_THUTHU_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField_TENSACH1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(BACKGROUNDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_NGAYTRA_NAM, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_NGAYTRA_THANG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_NGAYTRA_NGAY, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        jLabel14.getAccessibleContext().setAccessibleParent(this);
        jLabel4.getAccessibleContext().setAccessibleParent(this);
        jLabel9.getAccessibleContext().setAccessibleParent(this);
        jLabel7.getAccessibleContext().setAccessibleParent(this);
        jTextField_MATT.getAccessibleContext().setAccessibleParent(this);
        jLabel3.getAccessibleContext().setAccessibleParent(this);
        jLabel8.getAccessibleContext().setAccessibleParent(BACKGROUND);
        jLabel2.getAccessibleContext().setAccessibleParent(BACKGROUND);
        jComboBox_MADG.getAccessibleContext().setAccessibleParent(this);
        jLabel12.getAccessibleContext().setAccessibleParent(this);
        jLabel10.getAccessibleContext().setAccessibleParent(this);
        jComboBox_MS.getAccessibleContext().setAccessibleParent(this);
        jTextField_THUTHU_TEN.getAccessibleContext().setAccessibleParent(this);
        jTextField_TENSACH1.getAccessibleContext().setAccessibleParent(this);

        getContentPane().add(BACKGROUND);
        BACKGROUND.setBounds(10, 0, 640, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void getCurrentDate()
    {
        String currentdate = (java.time.LocalDate.now().toString());
        int temp = 0;
        this.nam = "";
        this.thang = "";
        this.ngay = "";
        for (int i = 0; i < currentdate.length(); i++)
        {
            if ((int) currentdate.charAt(i) == (int)'-')
            {
                temp++;
            }
            else
            {
                if (temp == 0)
                {
                    nam = nam + currentdate.charAt(i);
                }
                if (temp == 1)
                {
                    thang = thang + currentdate.charAt(i);
                }
                if (temp == 2)
                {
                    ngay = ngay + currentdate.charAt(i);
                }
            }
        }
    }
    private void loadThongTinMuon()
    {
       // System.out.println("something");
        dtm = (DefaultTableModel) jTable_MUON.getModel();
        dtm.setNumRows(0);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_THONGTINMUON");
            while (rs.next())
            {
                Vector vt = new Vector();
                System.out.println(vt.add(rs.getString("MADG")));
                //System.out.println(rs.getString("MADG"));
                vt.add(rs.getString("HOTEN"));
                vt.add(rs.getString("MS"));
                vt.add(rs.getString("TENSACH"));
                vt.add(rs.getString("NGAYMUON"));
            //    System.out.println(vt);
                dtm.addRow(vt);
            }
            jTable_MUON.setModel(dtm);
        }
        catch (SQLException e)
        {
            
        }
    }
    private void loadThongTinMuonDG()
    {
        dtm = (DefaultTableModel) jTable_MUON.getModel();
        dtm.setNumRows(0);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_DANGMUON @MADG = '" + jComboBox_MADG.getSelectedItem().toString() + "'");
            while (rs.next())
            {
                Vector vt = new Vector();
                vt.add(jComboBox_MADG.getSelectedItem().toString());
                vt.add(jTextField_DOCGIA_TEN.getText());
                vt.add(rs.getString("MS"));
                vt.add(rs.getString("TENSACH"));
                vt.add(rs.getString("NGAYMUON"));
            //    System.out.println(vt);
                dtm.addRow(vt);
            }
            jTable_MUON.setModel(dtm);
        }
        catch (SQLException e)
        {
            
        }
    }
    private void jComboBox_NGAYTRA_THANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYTRA_THANGActionPerformed
        // TODO add your handling code here:
        int yy;
        int mm;
        int dd;
        int soitem = jComboBox_NGAYTRA_NGAY.getItemCount();
        if (jComboBox_NGAYTRA_NAM.getSelectedIndex() == 0) yy = 0;
        else yy = 2019 - jComboBox_NGAYTRA_NAM.getSelectedIndex() + 1;

        if (jComboBox_NGAYTRA_THANG.getSelectedIndex() == 0) mm = 0;
        else mm = jComboBox_NGAYTRA_THANG.getSelectedIndex();

        dd = jComboBox_NGAYTRA_NGAY.getSelectedIndex();
        if (DayofMounth(mm,yy) != soitem - 1)
        {
            if (DayofMounth(mm,yy) > soitem - 1)
            {
                for (int i = 1; i <= (DayofMounth(mm,yy) - soitem) + 1; i++)
                {
                    jComboBox_NGAYTRA_NGAY.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
                if (dd > DayofMounth(mm,yy)) jComboBox_NGAYTRA_NGAY.setSelectedIndex(DayofMounth(mm,yy));
                for (int i = 1; i <= (soitem - DayofMounth(mm,yy) - 1); i++)
                {
                    jComboBox_NGAYTRA_NGAY.removeItemAt(soitem - i);
                }
            }
        }
    }//GEN-LAST:event_jComboBox_NGAYTRA_THANGActionPerformed

    private void jComboBox_NGAYTRA_NAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYTRA_NAMActionPerformed
        // TODO add your handling code here:
        int yy;
        int mm;
        int dd;
        int soitem = jComboBox_NGAYTRA_NGAY.getItemCount();
        if (jComboBox_NGAYTRA_NAM.getSelectedIndex() == 0) yy = 0;
        else yy = 2019 - jComboBox_NGAYTRA_NAM.getSelectedIndex() + 1;

        if (jComboBox_NGAYTRA_THANG.getSelectedIndex() == 0) mm = 0;
        else mm = jComboBox_NGAYTRA_THANG.getSelectedIndex();

        dd = jComboBox_NGAYTRA_NGAY.getSelectedIndex();

        if (DayofMounth(mm,yy) != soitem - 1)
        {
            if (DayofMounth(mm,yy) > soitem - 1)
            {
                for (int i = 1; i <= (DayofMounth(mm,yy) - soitem) + 1; i++)
                {
                    jComboBox_NGAYTRA_NGAY.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
                if (dd > DayofMounth(mm,yy)) jComboBox_NGAYTRA_NGAY.setSelectedIndex(DayofMounth(mm,yy));
                for (int i = 1; i <= (soitem - DayofMounth(mm,yy) - 1); i++)
                {
                    jComboBox_NGAYTRA_NGAY.removeItemAt(soitem - i);
                }

            }
        }
    }//GEN-LAST:event_jComboBox_NGAYTRA_NAMActionPerformed

    private void jComboBox_NGAYTRA_NGAYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYTRA_NGAYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_NGAYTRA_NGAYActionPerformed

    private void jButton_BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BACKActionPerformed
        // TODO add your handling code here:
        if (currentDG != -1)
        {
//            int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn quay lại?");
//            if (check == 0)
            {
            //    System.exit(0);
                setVisible(false);
                removeAll();
                new Menu().setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton_BACKActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát?");
        if(check == 0) System.exit(0);
        else setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void jButton_XACNHANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XACNHANActionPerformed
        // TODO add your handling code here:
        if (currentDG != -1)
        {
            int ngaymuon = Integer.parseInt(jTextField_NGAYMUON_NGAY.getText());
            int thangmuon = Integer.parseInt(jTextField_NGAYMUON_THANG.getText());
            int nammuon = Integer.parseInt(jTextField_NGAYMUON_NAM.getText());
            int ngaytra = jComboBox_NGAYTRA_NGAY.getSelectedIndex();
            int thangtra = jComboBox_NGAYTRA_THANG.getSelectedIndex();
            int namtra = 2020 - jComboBox_NGAYTRA_NAM.getSelectedIndex();
            String currentdate = (java.time.LocalDate.now().toString());
            int temp = 0;
            String nam = new String();
            String thang = new String();
            String ngay = new String();
            for (int i = 0; i < currentdate.length(); i++)
            {
                if ((int) currentdate.charAt(i) == (int)'-')
                {
                    temp++;
                }
                else
                {
                    if (temp == 0)
                    {
                        nam = nam + currentdate.charAt(i);
                    }
                    if (temp == 1)
                    {
                        thang = thang + currentdate.charAt(i);
                    }
                    if (temp == 2)
                    {
                        ngay = ngay + currentdate.charAt(i);
                    }
                }
            }
            if (isTrueDay(ngaymuon,thangmuon,nammuon,ngaytra,thangtra,namtra) && isTrueDay(ngaytra,thangtra,namtra,Integer.valueOf(ngay),Integer.valueOf(thang),Integer.valueOf(nam)))
            {
                String MS = jComboBox_MS.getItemAt(jComboBox_MS.getSelectedIndex());
                Connection connect = ketnoicsdl.layKetNoi();
                try
                {
                    String sql = "UPDATE CTPHIEUMUON SET NGAYTRA = ?, MATTT = ? WHERE MS = " + MS ;
                //    System.out.println(sql);
                    PreparedStatement ps = connect.prepareStatement(sql);
                    String temp1 = String.valueOf(namtra) + "-" + String.valueOf(thangtra) + "-" + String.valueOf(ngaytra);
                    java.sql.Date tra = Date.valueOf(temp1);
                //    System.out.println(tra);
                    ps.setDate(1, tra);
                    ps.setString(2, login.MATT);
                    int result = ps.executeUpdate();
                    if (result < 1)
                    {
                        JOptionPane.showMessageDialog(rootPane, "Lỗi thực thi");
                    }
                    else
                    {
                        jTable_MUON.removeAll();
                        JOptionPane.showMessageDialog(rootPane, "Trả thành công");
                        jComboBox_NGAYTRA_NGAY.setSelectedIndex(Integer.valueOf(this.ngay));
                        jComboBox_NGAYTRA_THANG.setSelectedIndex(Integer.valueOf(this.thang));
                        jComboBox_NGAYTRA_NAM.setSelectedIndex(2020 - Integer.valueOf(this.nam));
                        int j1 = 0;
                        connect = ketnoicsdl.layKetNoi();
                        try
                        {
                            jComboBox_MADG.removeAllItems();
                            Statement st = connect.createStatement();
                            ResultSet rs = st.executeQuery(" EXEC USP_DGDANGMUON");
                            while (rs.next())
                            {
                                String MADG = rs.getString("MADG");
                                jComboBox_MADG.addItem(MADG);
                            }
                        }
                        catch (SQLException e)
                        {

                        }
                        if (jComboBox_MADG.getItemCount() != 0){
                        currentDG = 0;
                        loadThongTinMuon();
                        try
                        {
                            jComboBox_MS.removeAllItems();
                            Statement st = connect.createStatement();
                            ResultSet rs = st.executeQuery("DECLARE @MADG varchar(10) SET @MADG = '" + jComboBox_MADG.getItemAt(0) + "' EXEC USP_DANGMUON @MADG");
                            while (rs.next())
                            {
                                jComboBox_MS.addItem(rs.getString("MS"));
                                if (j1 == 0)
                                {
                                    jTextField_TENSACH1.setText(rs.getString("TENSACH"));
                                    String NAM = rs.getString("NAM");
                                    String THANG = rs.getString("THANG");
                                    String NGAY = rs.getString("NGAY");
                                    jTextField_NGAYMUON_NGAY.setText(NGAY);
                                    jTextField_NGAYMUON_THANG.setText(THANG);
                                    jTextField_NGAYMUON_NAM.setText(NAM);
                                   // System.out.println(NGAY + "/" + THANG + "/" + NAM);
                                }
                                j1++;
                            }
                        }
                        catch(SQLException ex)
                        {

                        }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "Đã trả hết sách");
                            setVisible(false);
                            removeAll();
                            new Menu().setVisible(true);
                        }
                    }
                    ps.close();
                }
                catch (SQLException e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Lỗi kết nối CSDL");
                    e.printStackTrace();
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "Ngày trả không hợp lệ");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Không thể trả sách");
        }
    }//GEN-LAST:event_jButton_XACNHANActionPerformed

    private void jComboBox_MSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MSActionPerformed
        // TODO add your handling code here:

        if (jComboBox_MS.getItemCount() != 0)
        {
            //            jComboBox_NGAYTRA_NGAY.setSelectedIndex(0);
            //            jComboBox_NGAYTRA_THANG.setSelectedIndex(0);
            //            jComboBox_NGAYTRA_NAM.setSelectedIndex(0);
            String selected = jComboBox_MS.getItemAt(jComboBox_MS.getSelectedIndex());
            int MS = Integer.parseInt(selected);

            Connection connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery(" EXEC USP_TENSACH @MS = " + String.valueOf(MS));
                while (rs.next())
                {
                    jTextField_TENSACH1.setText(rs.getString("TENSACH"));
                }
            }
            catch(SQLException e)
            {

            }

        }
    }//GEN-LAST:event_jComboBox_MSActionPerformed

    private void jComboBox_MADGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MADGActionPerformed
        // TODO add your handling code here:
        if (currentDG != -1)
        {
            int j = 0;
            if (jComboBox_MADG.getSelectedIndex() != currentDG)
            {
                //                jComboBox_NGAYTRA_NGAY.setSelectedIndex(0);
                //                jComboBox_NGAYTRA_THANG.setSelectedIndex(0);
                //                jComboBox_NGAYTRA_NAM.setSelectedIndex(0);
                currentDG = jComboBox_MADG.getSelectedIndex();
                Connection connect = ketnoicsdl.layKetNoi();
                try
                {
                    String MADG = jComboBox_MADG.getItemAt(currentDG);
                    String TEN = "";
                    Statement st = connect.createStatement();
                    ResultSet rs = st.executeQuery("EXEC THONGTINDOCGIA @MADG = '" + MADG + "'");
                    while (rs.next())
                    {
                        TEN = rs.getString("HO") + " " + rs.getString("TEN");
                    }
                    jTextField_DOCGIA_TEN.setText(TEN);
                }
                catch (SQLException e)
                {
                    
                }
                jComboBox_MS.removeAllItems();
                jTextField_TENSACH1.setText("");
                connect = ketnoicsdl.layKetNoi();
                try
                {
                    Statement st = connect.createStatement();
                    ResultSet rs = st.executeQuery("EXEC USP_DANGMUON @MADG = '" + jComboBox_MADG.getItemAt(currentDG) + "'");
                    while (rs.next())
                    {
                        jComboBox_MS.addItem(rs.getString("MS"));
                        if (j == 0)
                        {
                            jTextField_TENSACH1.setText(rs.getString("TENSACH"));
                            String NAM = rs.getString("NAM");
                            String THANG = rs.getString("THANG");
                            String NGAY = rs.getString("NGAY");
                            jTextField_NGAYMUON_NGAY.setText(NGAY);
                            jTextField_NGAYMUON_THANG.setText(THANG);
                            jTextField_NGAYMUON_NAM.setText(NAM);
                            // System.out.println(NGAY + "/" + THANG + "/" + NAM);
                        }
                        j++;
                    }
                }
                catch (SQLException e)
                {

                }
            }

        }
        if(jComboBox_MADG.getItemCount() != 0) loadThongTinMuonDG();
    }//GEN-LAST:event_jComboBox_MADGActionPerformed

    private void jComboBox_MADGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_MADGMouseClicked
        // TODO add your handling code here:
        //    System.out.println("ffff");
    }//GEN-LAST:event_jComboBox_MADGMouseClicked

    private void jTextField_MATTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MATTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MATTActionPerformed

    private void jTable_MUONMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_MUONMouseClicked
        // TODO add your handling code here:

        int selectedrow = jTable_MUON.getSelectedRow();
        String MADG = jTable_MUON.getValueAt(selectedrow, 0).toString();
        String TENDG = jTable_MUON.getValueAt(selectedrow, 1).toString();
        String MS = jTable_MUON.getValueAt(selectedrow, 2).toString();
        String TENSACH = jTable_MUON.getValueAt(selectedrow , 3).toString();
        String ngay[] = jTable_MUON.getValueAt(selectedrow,4).toString().split("-");

        for (int i = 0; i < jComboBox_MADG.getItemCount(); i++)
        {
            if (jComboBox_MADG.getItemAt(i).equals(MADG)) jComboBox_MADG.setSelectedIndex(i);
        }
        jTextField_DOCGIA_TEN.setText(TENDG);
        for (int i = 0; i < jComboBox_MS.getItemCount(); i++)
        {
            if (jComboBox_MS.getItemAt(i).equals(MS)) jComboBox_MS.setSelectedIndex(i);
        }
        jTextField_TENSACH1.setText(TENSACH);
        jTextField_NGAYMUON_NGAY.setText(ngay[2]);
        jTextField_NGAYMUON_THANG.setText(ngay[1]);
        jTextField_NGAYMUON_NAM.setText(ngay[0]);
        jComboBox_NGAYTRA_NGAY.setSelectedIndex(Integer.valueOf(this.ngay));
        jComboBox_NGAYTRA_THANG.setSelectedIndex(Integer.valueOf(this.thang));
        jComboBox_NGAYTRA_NAM.setSelectedIndex(2020- Integer.valueOf(this.nam));
    }//GEN-LAST:event_jTable_MUONMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TRASACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TRASACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TRASACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TRASACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TRASACH().setVisible(true);
            }
        }); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BACKGROUND;
    private javax.swing.JButton jButton_BACK;
    private javax.swing.JButton jButton_XACNHAN;
    private javax.swing.JComboBox<String> jComboBox_MADG;
    private javax.swing.JComboBox<String> jComboBox_MS;
    private javax.swing.JComboBox<String> jComboBox_NGAYTRA_NAM;
    private javax.swing.JComboBox<String> jComboBox_NGAYTRA_NGAY;
    private javax.swing.JComboBox<String> jComboBox_NGAYTRA_THANG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_MUON;
    private javax.swing.JTextField jTextField_DOCGIA_TEN;
    private javax.swing.JTextField jTextField_MATT;
    private javax.swing.JTextField jTextField_NGAYMUON_NAM;
    private javax.swing.JTextField jTextField_NGAYMUON_NGAY;
    private javax.swing.JTextField jTextField_NGAYMUON_THANG;
    private javax.swing.JTextField jTextField_TENSACH1;
    private javax.swing.JTextField jTextField_THUTHU_TEN;
    // End of variables declaration//GEN-END:variables
}

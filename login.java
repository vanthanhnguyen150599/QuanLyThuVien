/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;


//import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Arrays;
import javax.swing.ImageIcon;
import java.sql.*;

import javax.swing.JOptionPane;

/**
 *
 * @author vanth
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    static String MATT;
    public login() {
        initComponents();
        ImageIcon im = new ImageIcon("C:\\Java\\QuanlyTV\\QLTV\\src\\qltv/loginicon.png");
        this.setIconImage(im.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_USER = new javax.swing.JTextField();
        jPasswordField_PASS = new javax.swing.JPasswordField();
        jButton_DANGNHAP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐĂNG NHẬP");
        setIconImages(null);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("TÊN ĐĂNG NHẬP:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("MẬT KHẨU:");

        jTextField_USER.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KeyListener keyListener = new KeyListener(){
            public void keyPressed(KeyEvent keyEvent) {
                if (keyEvent.getKeyCode() == KeyEvent.VK_ENTER) jButton_DANGNHAP.setSelected(true);
            }
            public void keyReleased(KeyEvent keyEvent) {

            }
            public void keyTyped(KeyEvent keyEvent) {

            }
            private void printIt(String title, KeyEvent keyEvent) {}

        };
        jTextField_USER.addKeyListener(keyListener);
        jTextField_USER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_USERActionPerformed(evt);
            }
        });
        jTextField_USER.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_USERKeyPressed(evt);
            }
        });

        jPasswordField_PASS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPasswordField_PASS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField_PASSActionPerformed(evt);
            }
        });
        jPasswordField_PASS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField_PASSKeyPressed(evt);
            }
        });

        jButton_DANGNHAP.setBackground(new java.awt.Color(255, 255, 255));
        jButton_DANGNHAP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton_DANGNHAP.setText("ĐĂNG NHẬP");
        jButton_DANGNHAP.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jButton_DANGNHAPMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButton_DANGNHAPMouseMoved(evt);
            }
        });
        jButton_DANGNHAP.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                jButton_DANGNHAPMouseWheelMoved(evt);
            }
        });
        jButton_DANGNHAP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton_DANGNHAPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton_DANGNHAPMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_DANGNHAPMouseReleased(evt);
            }
        });
        jButton_DANGNHAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DANGNHAPActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/icon.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(jTextField_USER, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPasswordField_PASS, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 117, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(242, 242, 242))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_DANGNHAP, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(221, 221, 221))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_USER, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField_PASS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jButton_DANGNHAP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_USERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_USERActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextField_USERActionPerformed
    private boolean checkMATT(String MATT)
    {
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT MATT FROM THUTHU WHERE MATT = '" + MATT + "'");
            while (rs.next())
            {
                return true;
            }
        }
        catch(SQLException e)
        {
            
        }
        return false;
    }
    private void jButton_DANGNHAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPActionPerformed
        // TODO add your handling code here:
      //  System.out.println(Arrays.equals(jPasswordField_PASS.getPassword(), "admin".toCharArray()));
        if (jTextField_USER.getText().length() == 0 || jPasswordField_PASS.getPassword().length == 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Không để trống tài khoản hoặc mật khẩu");
            return;
        } else
        if ("admin".equals(jTextField_USER.getText()) && Arrays.equals(jPasswordField_PASS.getPassword(), "admin".toCharArray()))
        { 
           // JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
            setVisible(false);
            removeAll();
            new Thuthu().setVisible(true);
            return;
        }
        
        MATT = jTextField_USER.getText();
        if (checkMATT(MATT) && Arrays.equals(jPasswordField_PASS.getPassword(), "123".toCharArray())) 
        {
                   
            //JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
            setVisible(false);
            removeAll();
            new Menu().setVisible(true);
            return;
        }
        jTextField_USER.setText("");
        jPasswordField_PASS.setText("");
        JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập hoặc mật khẩu không đúng");
    }//GEN-LAST:event_jButton_DANGNHAPActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) System.out.println("dsadad"); //jButton_DANGNHAP.setSelected(true);
        
    }//GEN-LAST:event_formKeyPressed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() == (char) 13) jButton_DANGNHAP.setSelected(true);
    }//GEN-LAST:event_formKeyTyped

    private void jTextField_USERKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_USERKeyPressed
        // TODO add your handling code here:
       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if (jTextField_USER.getText().length() == 0 || jPasswordField_PASS.getPassword().length == 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Không để trống tài khoản hoặc mật khẩu");
                return;
            } else
            if ("admin".equals(jTextField_USER.getText()) && Arrays.equals(jPasswordField_PASS.getPassword(), "admin".toCharArray()))
            { 
                //JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                setVisible(false);
                
                new Thuthu().setVisible(true);
                return;
            }
           MATT = jTextField_USER.getText();
            if (checkMATT(MATT) && Arrays.equals(jPasswordField_PASS.getPassword(), "123".toCharArray())) 
            {

                //JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                setVisible(false);
                removeAll();
                new Menu().setVisible(true);
                return;
            }
            jTextField_USER.setText("");
            jPasswordField_PASS.setText("");
            JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập hoặc mật khẩu không đúng");
        }
    }//GEN-LAST:event_jTextField_USERKeyPressed

    private void jPasswordField_PASSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField_PASSKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if (jTextField_USER.getText().length() == 0 || jPasswordField_PASS.getPassword().length == 0)
           {
               JOptionPane.showMessageDialog(rootPane, "Không để trống tài khoản hoặc mật khẩu");
               return;
           } else
           if ("admin".equals(jTextField_USER.getText()) && Arrays.equals(jPasswordField_PASS.getPassword(), "admin".toCharArray()))
           { 
              // JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công"); 
               setVisible(false);
               
               new Thuthu().setVisible(true);
               return;
           }
            MATT = jTextField_USER.getText();
            if (checkMATT(MATT) && Arrays.equals(jPasswordField_PASS.getPassword(), "123".toCharArray())) 
            {

                //JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
                setVisible(false);
                removeAll();
                new Menu().setVisible(true);
                return;
            }
           jTextField_USER.setText("");
           jPasswordField_PASS.setText("");
           JOptionPane.showMessageDialog(rootPane, "Tên đăng nhập hoặc mật khẩu không đúng");
        }
    }//GEN-LAST:event_jPasswordField_PASSKeyPressed

    private void jPasswordField_PASSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField_PASSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField_PASSActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát?");
        if(check == 0) System.exit(0);
        else setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    private void jButton_DANGNHAPMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseDragged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jButton_DANGNHAPMouseDragged

    private void jButton_DANGNHAPMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_DANGNHAPMouseReleased

    private void jButton_DANGNHAPMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_DANGNHAPMouseWheelMoved

    private void jButton_DANGNHAPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseEntered
        // TODO add your handling code here:
         jButton_DANGNHAP.setBackground(Color.BLUE);
    }//GEN-LAST:event_jButton_DANGNHAPMouseEntered

    private void jButton_DANGNHAPMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseMoved
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jButton_DANGNHAPMouseMoved

    private void jButton_DANGNHAPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_DANGNHAPMouseExited
        // TODO add your handling code here:
        jButton_DANGNHAP.setBackground(Color.WHITE);
    }//GEN-LAST:event_jButton_DANGNHAPMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_DANGNHAP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField_PASS;
    private javax.swing.JTextField jTextField_USER;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;

import javax.swing.JComboBox;
import java.sql.*;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vanth
 */

public class MUONSACH  extends JFrame {
    
    /**
     * Creates new form MUONSACH
     */
    static DefaultTableModel dtm;
    String MS01;
    String MS02 = null;
    String MS03 = null;
    String ngay = "";
    String thang = "";
    String nam = "";
    public int DayofMounth(int mm,int yy)
    {
        if (mm == 4 || mm == 6 || mm == 9 || mm == 11 ) return 30;
        if (mm == 2)
        {
            if (yy%4 == 0) return 29;
            return 28;
        }
        return 31;
    }
    public boolean isTrueDay(int dd1, int mm1, int yy1, int dd2, int mm2, int yy2) // kiểm tra ngày thứ 2 có lớn hơn bằng ngày thứ nhất không
    {
        if (yy2 > yy1) return true;
        if (yy2 < yy1) return false;
        if (mm2 > mm1) return true;
        if (mm2 < mm1) return false;
        if (dd2 > dd1) return true;
        if (dd2 == dd1) return true;
        return false;
    }
    private void getCurrentDate()
    {
        String currentdate = (java.time.LocalDate.now().toString());
        int temp = 0;
        this.nam = "";
        this.thang = "";
        this.ngay = "";
        for (int i = 0; i < currentdate.length(); i++)
        {
            if ((int) currentdate.charAt(i) == (int)'-')
            {
                temp++;
            }
            else
            {
                if (temp == 0)
                {
                    nam = nam + currentdate.charAt(i);
                }
                if (temp == 1)
                {
                    thang = thang + currentdate.charAt(i);
                }
                if (temp == 2)
                {
                    ngay = ngay + currentdate.charAt(i);
                }
            }
        }
    }
    private void loadThongTinMuon()
    {
       // System.out.println("something");
        dtm = (DefaultTableModel) jTable_MUON.getModel();
        dtm.setNumRows(0);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_THONGTINMUON");
            while (rs.next())
            {
                Vector vt = new Vector();
               vt.add(rs.getString("MADG"));
                //System.out.println(rs.getString("MADG"));
                vt.add(rs.getString("HOTEN"));
                vt.add(rs.getString("TENSACH"));
                vt.add(rs.getString("NGAYMUON"));
            //    System.out.println(vt);
                dtm.addRow(vt);
            }
            jTable_MUON.setModel(dtm);
        }
        catch (SQLException e)
        {
            
        }
    }
    private void loadThongTinMuonDG()
    {
        jTable_MUON.removeAll();
        dtm = (DefaultTableModel) jTable_MUON.getModel();
        dtm.setNumRows(0);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_DANGMUON @MADG = '" + jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex()) + "'");
            while (rs.next())
            {
                Vector vt = new Vector();
                vt.add(jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex()));
                vt.add(jTextField_DOCGIA_TEN.getText());
                vt.add(rs.getString("TENSACH"));
                vt.add(rs.getString("NAM") + "-" + rs.getString("THANG") + "-" + rs.getString("NGAY"));
                dtm.addRow(vt);
            }
            jTable_MUON.setModel(dtm);
        }
        catch (SQLException e)
        {
            
        }
    }
    public MUONSACH() {
      // setUndecorated(true);
        getCurrentDate();
        initComponents();
        loadThongTinMuon();
        ImageIcon im = new ImageIcon("C:\\Users\\vanth\\Desktop\\icon java/books.jpg");
        this.setIconImage(im.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        int temp = 0;
        jComboBox_MADG = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_MS1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        String ngay31[] = new String[32];
        ngay31[0] = "dd";
        for (int i = 1; i < 32; i++)
        {
            ngay31[i] = String.valueOf(i);
        }
        jComboBox_NGAYMUON_NGAY = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        String thang[] = new String[13];
        thang[0] = "mm";
        for (int i = 1; i < 13; i++)
        {
            thang[i] = String.valueOf(i);
        }
        jComboBox_NGAYMUON_THANG = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        String nam[] = new String[71];
        nam[0] = "yyyy";
        for (int i = 1; i <= 70; i++)
        {
            nam[i] = String.valueOf(i+1949);
        }
        jComboBox_NGAYMUON_NAM = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jButton_XACNHAN = new javax.swing.JButton();
        jButton_RESET = new javax.swing.JButton();
        jButton_BACK = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField_DOCGIA_TEN = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_THUTHU_TEN = new javax.swing.JTextField();
        jTextField_MATT = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField_TENSACH1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField_TENSACH2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jComboBox_MS2 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jTextField_TENSACH3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox_MS3 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_MUON = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ THƯ VIỆN - MƯỢN SÁCH");
        setBackground(new java.awt.Color(204, 0, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PHIẾU MƯỢN SÁCH");

        jLabel2.setText("MÃ ĐỌC GIẢ:");

        //System.out.println(x);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("SELECT MADG FROM DOCGIA");
            while (rs.next())
            {
                jComboBox_MADG.addItem(rs.getString("MADG"));
                //    System.out.println(temp);
            }

        }
        catch(SQLException e)
        {

        }

        if (jComboBox_MADG.getItemCount() != 0)
        {
            jComboBox_MADG.setSelectedIndex(0);
            String MADG = jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex());
            try
            {
                String TEN = "";
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("EXEC USP_THONGTINDOCGIA @MADG = '" + MADG + "'");
                while (rs.next())
                {
                    TEN = rs.getString("HO") + " " + rs.getString("TEN");
                }
                jTextField_DOCGIA_TEN.setText(TEN);
            }
            catch(SQLException e)
            {

            }
        }
        jComboBox_MADG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MADGActionPerformed(evt);
            }
        });

        jLabel3.setText("MÃ SÁCH:");

        if (jComboBox_MADG.getItemCount() != 0)
        {
            connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                while (rs.next())
                {
                    String MS = rs.getString("MS");
                    if (MS.length() != 0) jComboBox_MS1.addItem(MS);
                }
            }
            catch (SQLException e)
            {

            }
            if(jComboBox_MS1.getItemCount() != 0) MS01 = jComboBox_MS1.getItemAt(0);
        }
        jComboBox_MS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MS1ActionPerformed(evt);
            }
        });

        jLabel4.setText("NGÀY MƯỢN:");

        if (jComboBox_MADG.getItemCount() != 0){
            for (int i = 0; i < 32; i++)
            {
                jComboBox_NGAYMUON_NGAY.addItem(ngay31[i]);
            }
            jComboBox_NGAYMUON_NGAY.setSelectedIndex(0);

            jComboBox_NGAYMUON_NGAY.setSelectedIndex(Integer.valueOf(Integer.valueOf(this.ngay)));
        }
        jComboBox_NGAYMUON_NGAY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYMUON_NGAYActionPerformed(evt);
            }
        });

        jLabel5.setText("/");

        if (jComboBox_MADG.getItemCount() != 0){
            for (int i = 0 ; i < 13; i++)
            {
                jComboBox_NGAYMUON_THANG.addItem(thang[i]);
            }
            jComboBox_NGAYMUON_THANG.setSelectedIndex(Integer.valueOf(this.thang));
        }
        jComboBox_NGAYMUON_THANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYMUON_THANGActionPerformed(evt);
            }
        });

        jLabel6.setText("/");

        if (jComboBox_MADG.getItemCount() != 0){
            jComboBox_NGAYMUON_NAM.addItem(nam[0]);
            for (int i = 70; i >= 1; i--)
            {
                jComboBox_NGAYMUON_NAM.addItem(nam[i]);
            }
            jComboBox_NGAYMUON_NAM.setSelectedIndex(2020-Integer.valueOf(this.nam));
        }
        jComboBox_NGAYMUON_NAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_NGAYMUON_NAMActionPerformed(evt);
            }
        });

        jLabel7.setText("MÃ THỦ THƯ:");

        jButton_XACNHAN.setText("XÁC NHẬN");
        jButton_XACNHAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_XACNHANActionPerformed(evt);
            }
        });

        jButton_RESET.setText("LÀM LẠI");
        jButton_RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RESETActionPerformed(evt);
            }
        });

        jButton_BACK.setText("QUAY LẠI");
        jButton_BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BACKActionPerformed(evt);
            }
        });

        jLabel8.setText("HỌ VÀ TÊN:");

        jTextField_DOCGIA_TEN.setEditable(false);

        jLabel9.setText("HỌ VÀ TÊN:");

        jTextField_THUTHU_TEN.setEditable(false);

        jTextField_MATT.setEditable(false);
        jTextField_MATT.setText(login.MATT);
        connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_THONGTINTHUTHU @MATT = '" + login.MATT + "'");
            while (rs.next())
            {
                jTextField_THUTHU_TEN.setText(rs.getString("HO") + " " + rs.getString("TEN"));
            }
        }
        catch(SQLException e)
        {

        }
        jTextField_MATT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MATTActionPerformed(evt);
            }
        });

        jLabel12.setText("TÊN SÁCH:");

        if (jComboBox_MADG.getItemCount() != 0 && jComboBox_MS1.getItemCount() != 0){
            int MS;
            String TENSACH = new String();
            String selected = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
            MS = Integer.parseInt(selected);
            connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
                while (rs.next())
                {
                    TENSACH = rs.getString("TENSACH");
                }
            }
            catch(SQLException e)
            {

            }
            jTextField_TENSACH1.setText(TENSACH);
        }
        jTextField_TENSACH1.setEditable(false);

        jLabel13.setText("TÊN SÁCH:");

        jTextField_TENSACH2.setEditable(false);

        jLabel14.setText("MÃ SÁCH:");

        if (jComboBox_MADG.getItemCount() != 0)
        {
            jComboBox_MS2.addItem("Chọn sách");
            MS02 = null;
            connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                while (rs.next())
                {
                    String MS2 = rs.getString("MS");
                    //    System.out.println((jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equalsIgnoreCase(MS2)));
                    if (!(jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equals(MS2)))
                    jComboBox_MS2.addItem(MS2);
                }
            }
            catch (SQLException e)
            {

            }
        }
        jComboBox_MS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MS2ActionPerformed(evt);
            }
        });

        jLabel15.setText("TÊN SÁCH:");

        jTextField_TENSACH3.setEditable(false);

        jLabel16.setText("MÃ SÁCH:");

        if (jComboBox_MADG.getItemCount() != 0)
        {
            jComboBox_MS3.addItem("Chọn sách");
            MS03 = null;
            String temp1 = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
            String temp2 = jComboBox_MS2.getItemAt(jComboBox_MS2.getSelectedIndex());
            connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                while (rs.next())
                {
                    String MS3 = rs.getString("MS");
                    //    System.out.println((jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equalsIgnoreCase(MS2)));
                    if (!(temp1.equals(MS3)) && !(temp2.equals(MS3)))
                    jComboBox_MS3.addItem(MS3);
                }
            }
            catch (SQLException e)
            {

            }
        }
        jComboBox_MS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_MS3ActionPerformed(evt);
            }
        });

        jTable_MUON.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã đọc giả", "Họ và tên", "Tên sách", "Ngày mượn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable_MUON);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("ĐỌC GIẢ ĐANG MƯỢN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_MATT)
                            .addComponent(jComboBox_MS1, 0, 143, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jButton_XACNHAN))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(jButton_RESET, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(147, 147, 147)
                                .addComponent(jButton_BACK)
                                .addGap(53, 53, 53))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox_MS2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox_MADG, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel13)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox_NGAYMUON_NGAY, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox_NGAYMUON_THANG, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox_NGAYMUON_NAM, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox_MS3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel15)))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField_TENSACH3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_TENSACH2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_THUTHU_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_DOCGIA_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_TENSACH1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap(37, Short.MAX_VALUE))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_MADG, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_DOCGIA_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField_MATT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_THUTHU_TEN, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_MS1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_TENSACH1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel16)
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField_TENSACH2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_MS2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_MS3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_TENSACH3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox_NGAYMUON_NGAY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_NGAYMUON_THANG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBox_NGAYMUON_NAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_XACNHAN)
                    .addComponent(jButton_RESET)
                    .addComponent(jButton_BACK))
                .addGap(29, 29, 29)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_NGAYMUON_NGAYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYMUON_NGAYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_NGAYMUON_NGAYActionPerformed

    private void jComboBox_NGAYMUON_THANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYMUON_THANGActionPerformed
        // TODO add your handling code here:
        int yy;
        int mm;
        int dd;
        int soitem = jComboBox_NGAYMUON_NGAY.getItemCount();
        if (jComboBox_NGAYMUON_NAM.getSelectedIndex() == 0) yy = 0;
        else yy = 2019 - jComboBox_NGAYMUON_NAM.getSelectedIndex() + 1;
        
        if (jComboBox_NGAYMUON_THANG.getSelectedIndex() == 0) mm = 0;
        else mm = jComboBox_NGAYMUON_THANG.getSelectedIndex();
        
        dd = jComboBox_NGAYMUON_NGAY.getSelectedIndex();
        if (DayofMounth(mm,yy) != soitem - 1)
        {
            if (DayofMounth(mm,yy) > soitem - 1)
            {
                for (int i = 1; i <= (DayofMounth(mm,yy) - soitem) + 1; i++)
                {
                    jComboBox_NGAYMUON_NGAY.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
               if (dd > DayofMounth(mm,yy)) jComboBox_NGAYMUON_NGAY.setSelectedIndex(DayofMounth(mm,yy));
                for (int i = 1; i <= (soitem - DayofMounth(mm,yy) - 1); i++)
                {
                    jComboBox_NGAYMUON_NGAY.removeItemAt(soitem - i);
                }
            }
        }
    }//GEN-LAST:event_jComboBox_NGAYMUON_THANGActionPerformed

    private void jComboBox_NGAYMUON_NAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_NGAYMUON_NAMActionPerformed
        // TODO add your handling code here:
        int yy;
        int mm;
        int dd;
        int soitem = jComboBox_NGAYMUON_NGAY.getItemCount();
        if (jComboBox_NGAYMUON_NAM.getSelectedIndex() == 0) yy = 0;
        else yy = 2019 - jComboBox_NGAYMUON_NAM.getSelectedIndex() + 1;
        
        if (jComboBox_NGAYMUON_THANG.getSelectedIndex() == 0) mm = 0;
        else mm = jComboBox_NGAYMUON_THANG.getSelectedIndex();
        
        dd = jComboBox_NGAYMUON_NGAY.getSelectedIndex();
        
        if (DayofMounth(mm,yy) != soitem - 1)
        {
            if (DayofMounth(mm,yy) > soitem - 1)
            {
                for (int i = 1; i <= (DayofMounth(mm,yy) - soitem) + 1; i++)
                {
                    jComboBox_NGAYMUON_NGAY.addItem(String.valueOf(i+soitem-1));
                }
            }
            else
            {
                if (dd > DayofMounth(mm,yy)) jComboBox_NGAYMUON_NGAY.setSelectedIndex(DayofMounth(mm,yy));
                for (int i = 1; i <= (soitem - DayofMounth(mm,yy) - 1); i++)
                {
                    jComboBox_NGAYMUON_NGAY.removeItemAt(soitem - i);
                }
                
            }
        }
    }//GEN-LAST:event_jComboBox_NGAYMUON_NAMActionPerformed

    private void jButton_RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RESETActionPerformed
        // TODO add your handling code here:
        jComboBox_MADG.setSelectedIndex(0);
        jTextField_DOCGIA_TEN.setText("");
        jTable_MUON.removeAll();
        loadThongTinMuon();
        //=================== LẤY TÊN THỦ THƯ MẶC ĐINH =================
        String MADG = jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex());
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC USP_THONGTINTHUTHU @MATT = '" + login.MATT + "'");
            while (rs.next())
            {
                jTextField_THUTHU_TEN.setText(rs.getString("HO") + " " + rs.getString("TEN"));
            }
        }
        catch(SQLException e)
        {

        }
        jComboBox_MS1.setSelectedIndex(0);
        MS01 = jComboBox_MS1.getItemAt(0);
        //===== LẤY TÊN SÁCH 1 MẶC ĐỊNH===============
        int MS;
        String TENSACH = new String(); 
        String selected = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
        MS = Integer.parseInt(selected);
        connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
            while (rs.next())
            {
                TENSACH = rs.getString("TENSACH");
            }
        }
        catch(SQLException e)
        {

        }
        //======================================
        jTextField_TENSACH1.setText(TENSACH);
        MS02 = null;
        jComboBox_MS2.setSelectedIndex(0);
        jTextField_TENSACH2.setText("");
        jComboBox_MS3.setSelectedIndex(0);
        MS03 = null;
        jTextField_TENSACH3.setText("");
        jComboBox_NGAYMUON_NGAY.setSelectedIndex(0);
        jComboBox_NGAYMUON_THANG.setSelectedIndex(0);
        jComboBox_NGAYMUON_NAM.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_jButton_RESETActionPerformed

    private void jButton_XACNHANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XACNHANActionPerformed
        // TODO add your handling code here:
    //    System.out.println(jComboBox_MADG.getSelectedItem().toString());
        if(jComboBox_MADG.getItemCount() != 0)
        {
            String currentdate = (java.time.LocalDate.now().toString());
            int temp = 0;
            String nam = new String();
            String thang = new String();
            String ngay = new String();
            for (int i = 0; i < currentdate.length(); i++)
            {
                if ((int) currentdate.charAt(i) == (int)'-')
                {
                    temp++;
                }
                else
                {
                    if (temp == 0)
                    {
                        nam = nam + currentdate.charAt(i);
                    }
                    if (temp == 1)
                    {
                        thang = thang + currentdate.charAt(i);
                    }
                    if (temp == 2)
                    {
                        ngay = ngay + currentdate.charAt(i);
                    }
                }
            }
            int ngaymuon = jComboBox_NGAYMUON_NGAY.getSelectedIndex();
            int thangmuon = jComboBox_NGAYMUON_THANG.getSelectedIndex();
            int nammuon = 2021 - jComboBox_NGAYMUON_NAM.getSelectedIndex();
            if((ngaymuon != 0 && thangmuon != 0 && nammuon != 0) && isTrueDay(ngaymuon,thangmuon,nammuon,Integer.parseInt(ngay),Integer.parseInt(thang),Integer.parseInt(nam)))
            {
                int muon = 1;
                if(jComboBox_MS2.getSelectedIndex() != 0) muon++;
                if(jComboBox_MS3.getSelectedIndex() != 0) muon++;
                int dangmuon = 0;
                Connection connect = ketnoicsdl.layKetNoi();
                try
                {
                    Statement st = connect.createStatement();
                    ResultSet rs = st.executeQuery("EXEC USP_SOSACHDANGMUON @MADG = '" + jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex()) + "'");
                    while (rs.next())
                    {
                        dangmuon = Integer.parseInt(rs.getString("SL"));
                    }
                    
                }
                catch(SQLException e)
                {
                    
                }
                if (dangmuon + muon <= 3)
                {
                    // ====================== Nhập vào PHIEUMUONSACH ==========================
                    connect = ketnoicsdl.layKetNoi();
                    try
                    {
                        PreparedStatement ps = connect.prepareStatement("INSERT INTO PHIEUMUONSACH(MADG, MATT, NGAYMUON) VALUES (?,?,?)");
                        String temp1 = String.valueOf(nammuon) + "-" + String.valueOf(thangmuon) + "-" + String.valueOf(ngaymuon);
                        java.sql.Date date = Date.valueOf(temp1);
                        ps.setString(1, jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex()));
                        ps.setString(2, login.MATT);
                        ps.setDate(3, date);
                        int result = ps.executeUpdate();
                        if(result < 1) JOptionPane.showMessageDialog(rootPane, "Lỗi thực thi");
                        else
                        {
                            String MAPM = "";
                            connect = ketnoicsdl.layKetNoi();
                            try
                            {
                                Statement st = connect.createStatement();
                                ResultSet rs = st.executeQuery("EXEC USP_CHUAGHICHITIET");
                                while (rs.next())
                                {
                                    MAPM = rs.getString("MAPM");
                                }
                            }
                            catch(SQLException ex)
                            {
                                
                            }
                            if (MAPM.length() != 0) // Nhập vào CTPHIEUMUON
                            {
                                connect = ketnoicsdl.layKetNoi();
                                try
                                {
                                    ps = connect.prepareStatement("INSERT INTO CTPHIEUMUON(MS, MAPM, GIAHAN) VALUES(?,?,?)");
                                    ps.setInt(2, Integer.parseInt(MAPM));
                                    ps.setInt(1,Integer.parseInt(jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex())));
                                    ps.setInt(3, 0);
                                    result = ps.executeUpdate();
                                    if (result < 1) JOptionPane.showMessageDialog(rootPane, "Không thể ghi nhận mượn sách");
                                    else 
                                    {
                                        if (jComboBox_MS2.getSelectedIndex() != 0)
                                        {
                                            ps = connect.prepareStatement("INSERT INTO CTPHIEUMUON(MS, MAPM, GIAHAN) VALUES(?,?,?)");
                                            ps.setInt(2, Integer.parseInt(MAPM));
                                            ps.setInt(1,Integer.parseInt(jComboBox_MS2.getItemAt(jComboBox_MS2.getSelectedIndex())));
                                            ps.setInt(3, 0);
                                            ps.executeUpdate();
                                        }
                                        if (jComboBox_MS3.getSelectedIndex() != 0)
                                        {
                                            ps = connect.prepareStatement("INSERT INTO CTPHIEUMUON(MS, MAPM, GIAHAN) VALUES(?,?,?)");
                                            ps.setInt(2, Integer.parseInt(MAPM));
                                            ps.setInt(1,Integer.parseInt(jComboBox_MS3.getItemAt(jComboBox_MS3.getSelectedIndex())));
                                            ps.setInt(3, 0);
                                            ps.executeUpdate();
                                        }
                                        
                                    }
                                    JOptionPane.showMessageDialog(rootPane, "Mượn thành công");
                                    //========== CẬP NHẬT LẠI DS DOC GIA  =======================
                               /*     int temp2 = 0;
                                    int soluong = jComboBox_MADG.getItemCount();
                                    for (String x:ds_doc_gia.ListDG.keySet())
                                    {
                                        connect = ketnoicsdl.layKetNoi();
                                        try
                                        {
                                            Statement st = connect.createStatement();
                                            ResultSet rs = st.executeQuery("EXEC USP_SOSACHDANGMUON @MADG = '" + x + "'");
                                            while (rs.next())
                                            {
                                                temp2 = Integer.parseInt(rs.getString("SL"));
                                                System.out.println(temp2);
                                            }
                                        }
                                        catch(SQLException e)
                                        {

                                        }
                                        if (temp2 < 3) jComboBox_MADG.addItem(x);
                                        
                                    }
                                    for (int i = 0; i < soluong; i++) jComboBox_MADG.removeItemAt(0);
                                    jTextField_DOCGIA_TEN.setText("");
                                    if(jComboBox_MADG.getItemCount() != 0)
                                    {
                                        jComboBox_MADG.setSelectedIndex(0);
                                        String MADG = jComboBox_MADG.getItemAt(jComboBox_MADG.getSelectedIndex());
                                        String TEN = ds_doc_gia.ListDG.get(MADG).HO + " " + ds_doc_gia.ListDG.get(MADG).TEN;
                                        jTextField_DOCGIA_TEN.setText(TEN);
                                    }
                                    // ============ CẬP NHẬT DANH SÁCH SÁCH 1 VÀ TÊN ================
                                    jComboBox_MS1.removeAllItems();
                                    if (jComboBox_MADG.getItemCount() != 0)
                                    {
                                        connect = ketnoicsdl.layKetNoi();
                                        try
                                        {
                                            Statement st = connect.createStatement();
                                            ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                                            while (rs.next())
                                            {
                                                String MS = rs.getString("MS");
                                                if (MS.length() != 0)jComboBox_MS1.addItem(MS);
                                            }
                                        }
                                        catch (SQLException e)
                                        {

                                        }
                                        if(jComboBox_MS1.getItemCount() != 0) MS01 = jComboBox_MS1.getItemAt(0);
                                    }
                                    // TEN SACH 1
                                    jTextField_TENSACH1.setText("");
                                    if (jComboBox_MADG.getItemCount() != 0 && jComboBox_MS1.getItemCount() != 0)
                                    {    
                                        int MS;
                                        String TENSACH = new String(); 
                                        String selected = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
                                        MS = Integer.parseInt(selected);
                                        connect = ketnoicsdl.layKetNoi();
                                        try
                                        {
                                            Statement st = connect.createStatement();
                                            ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
                                            while (rs.next())
                                            {
                                                TENSACH = rs.getString("TENSACH");
                                            }
                                        }
                                        catch(SQLException e)
                                        {

                                        }
                                        jTextField_TENSACH1.setText(TENSACH);
                                    }
                                    //=========== CẬP NHẬT LẠI DANH SÁCH SÁCH 2 VÀ TÊN ===================
                                    jComboBox_MS2.setSelectedIndex(0);
                                    soluong = jComboBox_MS2.getItemCount();
                                    if (jComboBox_MADG.getItemCount() != 0)
                                    {
                                        MS02 = null;
                                        if (jComboBox_MS1.getItemCount() >= 2)
                                        {
                                            connect = ketnoicsdl.layKetNoi();
                                            try
                                            {
                                                Statement st = connect.createStatement();
                                                ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                                                while (rs.next())
                                                {
                                                    String MS2 = rs.getString("MS");
                                                   // System.out.println((jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equalsIgnoreCase(MS2)));
                                                    if (!(jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equals(MS2)) && MS2.length() != 0)
                                                    jComboBox_MS2.addItem(MS2);
                                                }
                                            }
                                            catch (SQLException e)
                                            {

                                            }
                                        }
                                    }
                                    for (int i = 1; i < soluong; i++) jComboBox_MS2.removeItemAt(1);
                                    // TEN SACH 2
                                    jTextField_TENSACH2.setText("");
                                    //=============== CẬP NHẬT DANH SÁCH SÁCH 3 VÀ TÊN ===================
                                    jComboBox_MS3.removeAllItems();
                                    if (jComboBox_MADG.getItemCount() != 0)
                                    {
                                        jComboBox_MS3.addItem("Chọn sách");
                                        jComboBox_MS3.setSelectedIndex(0);
                                        MS03 = null;
                                        if (jComboBox_MS2.getItemCount() >= 1)
                                        {
                                            String temp3 = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
                                            String temp4 = jComboBox_MS2.getItemAt(jComboBox_MS2.getSelectedIndex());
                                            connect = ketnoicsdl.layKetNoi();
                                            try
                                            {
                                                Statement st = connect.createStatement();
                                                ResultSet rs = st.executeQuery("EXEC USP_SACHCOTHEMUON");
                                                while (rs.next())
                                                {
                                                    String MS3 = rs.getString("MS");
                                                //    System.out.println((jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex()).equalsIgnoreCase(MS2)));
                                                    if (!(temp3.equals(MS3)) && !(temp4.equals(MS3))&& MS3.length() != 0)
                                                    jComboBox_MS3.addItem(MS3);
                                                }
                                            }
                                            catch (SQLException e)
                                            {

                                            }
                                        }
                                    }
                                    // TÊN SÁCH 3
                                    jTextField_TENSACH3.setText("");
                                    //============== CẬP NHẬT NGÀY THÁNG NĂM ============
                                    jComboBox_NGAYMUON_NGAY.removeAllItems();
                                    jComboBox_NGAYMUON_NGAY.addItem("dd");
                                    for (int i = 1; i <= 31; i++)
                                    {
                                        jComboBox_NGAYMUON_NGAY.addItem(String.valueOf(i));
                                    }
                                    jComboBox_NGAYMUON_THANG.removeAllItems();
                                    jComboBox_NGAYMUON_THANG.addItem("mm");
                                    for (int i = 1; i <= 12; i++)
                                    {
                                        jComboBox_NGAYMUON_THANG.addItem(String.valueOf(i));
                                    }
                                    jComboBox_NGAYMUON_NAM.removeAllItems();
                                    jComboBox_NGAYMUON_NAM.addItem("yyyy");
                                    for (int i = 1; i <= 70; i++)
                                    {
                                        jComboBox_NGAYMUON_NAM.addItem(String.valueOf(2020-i));
                                    } */
                                    setVisible(false);
                                    removeAll();
                                   new MUONSACH().setVisible(true);
                                } 
                                catch (SQLException exc)
                                {
                                    exc.printStackTrace();
                                }
                            }
                            else 
                            {
                                JOptionPane.showMessageDialog(rootPane, "Lỗi thực thi ghi mượn sách");
                            }
                        }
                    }
                    catch (SQLException e)
                    {
                        
                    }
                }
                else JOptionPane.showMessageDialog(rootPane, "Không thể mượn nhiều hơn 3 cuốn sách");
            }
            else JOptionPane.showMessageDialog(rootPane, "Ngày mượn không hợp lệ");
        }
        else JOptionPane.showMessageDialog(rootPane,"Không có đọc giả có thể mượn. Vui lòng trả sách để tiếp tục mượn");
    }//GEN-LAST:event_jButton_XACNHANActionPerformed

    private void jComboBox_MS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MS1ActionPerformed
        // TODO add your handling code here:
        
    //    if (jComboBox_MS1.isFocusTraversalPolicyProvider()){
        // ============= CẬP NHẬT TÊN SÁCH ============
        int MS = 0;
        String TENSACH = new String(); 
        String selected = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
        if ( selected != null) MS = Integer.parseInt(selected);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
            while (rs.next())
            {
                TENSACH = rs.getString("TENSACH");
            }
        }
        catch(SQLException e)
        {

        }
        jTextField_TENSACH1.setText(TENSACH);
        //========== CẬP NHẬT LIST 2 ================
        String temp1 = jComboBox_MS1.getItemAt(jComboBox_MS1.getSelectedIndex());
        jComboBox_MS2.addItem(MS01);
        jComboBox_MS2.removeItem(temp1);
        
        // ============ CẬP NHẬT LIST 3==============
        jComboBox_MS3.addItem(MS01);
        jComboBox_MS3.removeItem(temp1);
       
        
        MS01 = temp1;
    }//GEN-LAST:event_jComboBox_MS1ActionPerformed
   // }
    private void jComboBox_MADGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MADGActionPerformed
        // TODO add your handling code here:
        Connection connect = ketnoicsdl.layKetNoi();
        String MADG = jComboBox_MADG.getSelectedItem().toString();
        try
        {
            String TEN = "";
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("EXEC THONGTINDOCGIA @MADG = '" + MADG + "'");
        while (rs.next())
        {
            TEN = rs.getString("HO") + " " + rs.getString("TEN");
        }
        jTextField_DOCGIA_TEN.setText(TEN);
        }
        catch (SQLException e)
        {
            
        }
        loadThongTinMuonDG();
        
    }//GEN-LAST:event_jComboBox_MADGActionPerformed

    private void jComboBox_MS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MS2ActionPerformed
        // TODO add your handling code here:
    //    if(jComboBox_MS2.isFocusTraversalPolicyProvider()){
        // ============= CẬP NHẬT TÊN SÁCH ============
        int MS = 0;
        String TENSACH = "";
        String selected = jComboBox_MS2.getItemAt(jComboBox_MS2.getSelectedIndex());
        if (jComboBox_MS2.getSelectedIndex() != 0 && selected.length() != 0) {MS = Integer.parseInt(selected);}
        
        if(MS != 0)
        {
            Connection connect = ketnoicsdl.layKetNoi();
            try
            {
                Statement st = connect.createStatement();
                ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
                while (rs.next())
                {
                    TENSACH = rs.getString("TENSACH");
                }
            }
            catch(SQLException e)
            {

            }
        }
        jTextField_TENSACH2.setText(TENSACH);
        // ============ CẬP NHẬT LIST 1,3 =================
        String temp2 = jComboBox_MS2.getItemAt(jComboBox_MS2.getSelectedIndex());
        if (jComboBox_MS2.getSelectedIndex() == 0)
        {
            if(MS02 != null)
            {
                jComboBox_MS1.addItem(MS02);
                jComboBox_MS3.addItem(MS02);
            }
            MS02 = null;
        }
        else
        {
            
            if(MS02 != null)
            {
                jComboBox_MS1.addItem(MS02);
                jComboBox_MS3.addItem(MS02);
            }
            jComboBox_MS1.removeItem(temp2);
            jComboBox_MS3.removeItem(temp2);
            MS02 = temp2;
        }
     //   }
    }//GEN-LAST:event_jComboBox_MS2ActionPerformed

    private void jComboBox_MS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_MS3ActionPerformed
        // TODO add your handling code here:
        // ============= CẬP NHẬT TÊN SÁCH ============
    //    if (jComboBox_MS3.isFocusTraversalPolicyProvider()){
        int MS = 0;
        String TENSACH = new String(); 
        String selected = jComboBox_MS3.getItemAt(jComboBox_MS3.getSelectedIndex());
        if(jComboBox_MS3.getSelectedIndex() != 0 && selected != null) MS = Integer.parseInt(selected);
        Connection connect = ketnoicsdl.layKetNoi();
        try
        {
            Statement st = connect.createStatement();
            ResultSet rs = st.executeQuery("DECLARE @MS int SET @MS = " + String.valueOf(MS) + " EXEC USP_TENSACH @MS");
            while (rs.next())
            {
                TENSACH = rs.getString("TENSACH");
            }
        }
        catch(SQLException e)
        {

        }
        jTextField_TENSACH3.setText(TENSACH);
        // ============ CẬP NHẬT LIST 1,2 =================
        String temp3 = jComboBox_MS3.getItemAt(jComboBox_MS3.getSelectedIndex());
        if (jComboBox_MS3.getSelectedIndex() == 0)
        {
            if(MS03 != null)
            {
                jComboBox_MS1.addItem(MS03);
                jComboBox_MS2.addItem(MS03);
            }
            MS03 = null;
        }
        else
        {
            
            if(MS03 != null)
            {
                jComboBox_MS1.addItem(MS03);
                jComboBox_MS2.addItem(MS03);
            }
            jComboBox_MS1.removeItem(temp3);
            jComboBox_MS2.removeItem(temp3);
            MS03 = temp3;
        }
     //   }
    }//GEN-LAST:event_jComboBox_MS3ActionPerformed

    private void jTextField_MATTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MATTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_MATTActionPerformed

    private void jButton_BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BACKActionPerformed
        // TODO add your handling code here:
        if(jComboBox_MADG.getItemCount() != 0)
        {
//            int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có chắc chắn muốn quay lại?");
//            if(check == 0)
            {
            //    System.exit(0);
                
                setVisible(false);
                removeAll();
                new Menu().setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton_BACKActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int check = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn thoát?");
        if(check == 0) System.exit(0);
        else setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MUONSACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MUONSACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MUONSACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MUONSACH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new MUONSACH().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_BACK;
    private javax.swing.JButton jButton_RESET;
    private javax.swing.JButton jButton_XACNHAN;
    private javax.swing.JComboBox<String> jComboBox_MADG;
    private javax.swing.JComboBox<String> jComboBox_MS1;
    private javax.swing.JComboBox<String> jComboBox_MS2;
    private javax.swing.JComboBox<String> jComboBox_MS3;
    private javax.swing.JComboBox<String> jComboBox_NGAYMUON_NAM;
    private javax.swing.JComboBox<String> jComboBox_NGAYMUON_NGAY;
    private javax.swing.JComboBox<String> jComboBox_NGAYMUON_THANG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_MUON;
    private javax.swing.JTextField jTextField_DOCGIA_TEN;
    private javax.swing.JTextField jTextField_MATT;
    private javax.swing.JTextField jTextField_TENSACH1;
    private javax.swing.JTextField jTextField_TENSACH2;
    private javax.swing.JTextField jTextField_TENSACH3;
    private javax.swing.JTextField jTextField_THUTHU_TEN;
    // End of variables declaration//GEN-END:variables
}
